/* Pre:
*/
/*range T = 0..2
BUFF = (in[i:T]->out[i]->BUFF).
||TWOBUF = (a:BUFF||b:BUFF)
	/{in/a.in,a.out/b.in,out/b.out}@{in,out}.
||ABS = (TWOBUF){input/in[T],output/out[T]}.
*/
/*
(1.)
P = (a -> b -> P).
Q = (c -> b -> Q).
||S1 = (P||Q).

S2 = (a->c->b->S2|c->a->b->S2).


*/
/*
(2.)
ELEMENT = (up->down->ELEMENT).
||ELEMENTS(N=2) = (forall[i:0..N-1]e[i]:ELEMENT)
	/{up/e[0].up,down/e[N-1].down,
	forall[i:0..N-2]{e[i].down/e[i+1].up}
	}@{up,down}.


(2. alternative)
ELEMENT = (up->down->ELEMENT).
||ELEMENTS(N=4) = if(N==1)
					then ELEMENT 
				  else
					(ELEMENT/{mid/down}||ELEMENTS(N-1)/{mid/up})
					@{up,down}.
*/
/*
3. - WRONG

CLIENT = (call -> wait -> continue -> CLIENT).
SERVER = (request -> service -> reply -> SERVER).

||CLIENT_SERVER = (a:CLIENT || b:CLIENT || SERVER)
				/{call/request, reply/wait}.
*/
const N = 2
CLIENT = (call -> wait -> continue -> CLIENT).
SERVER = (request -> service -> reply -> SERVER).
||CLIENT_SERVER = (client[1..N]:CLIENT||SERVER)
			/{client[1..N].call/request,
			client[1..N].wait/reply}.