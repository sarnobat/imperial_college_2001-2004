# /etc/rc - System startup script run by init before going multiuser.
# Script significantly updated by tw00@doc.ic.ac.uk (tim wood),
# and jab00@doc.ic.ac.uk (Jacob Bower).

umask 022
TERM="${TERM-minix}"
PATH=/usr/local/bin:/bin:/usr/bin
export TERM PATH

usage()
{
    echo >&2 "Usage: $0 [-saf] start|stop|down"
    exec intr sh
}

while getopts 'saf' opt
do
    case $opt in
    s)	sflag=t ;;	# Single user
    a)	aflag=t ;;	# Ask for /usr
    f)	fflag=t ;;	# Force a full file system check
    *)	usage
    esac
done
shift `expr $OPTIND - 1`

case "$#:$1" in
1:start|1:stop|1:down)
    action=$1
    ;;
*)  usage
esac

case $action in
start)
    # We set a oug+rw umask, so that when the zip disk is mounted on a
    # lab machine, users can still read and write files on the fs.
    umask 0000

    # National keyboard?
    test -f /etc/keymap && intr loadkeys /etc/keymap

    # Set timezone.
    . /etc/profile

    # Try to read the hardware real-time clock, otherwise do it manually.
    readclock || intr date -q

    # Initialize files.
    printroot >/etc/mtab		# /etc/mtab keeps track of mounts
    >/etc/utmp				# /etc/utmp keeps track of logins

    #########################################################################
    # /etc/fstab lists the root, tmp and usr devices.
    # However it is unreliable since in this case we may be moving
    # our root partition around.
    #. /etc/fstab
    # What we should do instead is get the root filesystem location from 
    # printroot
    #########################################################################
    root=`printroot -r`

    # Ideally we should attempt to lock all mounted fs so...
    lock $root 2> /dev/null

    #
    # We still need to find out our tmp and /minix devices though.
    # Lets use /etc/fstab for that!
    #
     . /etc/fstab

    # Any swapspace on a device?
    # We don't allow swap on zipminix
    #test "$swap" : '/dev/' && mount -s $swap

    # Check if the system crashed.
    if shutdown -C
    then
	echo
	echo "The system was not properly shut down.  Checking file systems."
	fflag=t
    fi

    if [ "$fflag" ]
    then
        if [ "$usr" ] 
        then 
            umount $usr
	fi

	intr fsck -r $root
	
	if [ "$usr" ]
	then
	    intr fsck -r $usr
	    mount $usr /usr
	    lock $usr 2> /dev/null
	fi
    fi

     # Mount /tmp if required.
     if [ $tmp ]
     then 
        case $tmp in
           /dev/ram)
               (test -b /dev/ram && 
                 mkfs /dev/ram &&
                 mount /dev/ram /tmp) ||
                echo "Cannot mount /tmp on ram disk"
           ;;

           *)
               mount $tmp /tmp
               lock $tmp 2>/dev/null
           ;;
        esac 
     fi
    
     # Mount /minix if required.
     if [ $minix ]
     then 
     	mount $minix /minix
     fi
    
    if [ "$sflag" ]
    then
	echo "Single user."
	intr sh
    fi

    # Any swapspace on a file?
    test -n "$swap" -a ! "$swap" : '/dev/' && mount -s $swap

    # Things should be alright now.
    echo;echo "Multiuser startup in progress."

    ;;

down)
    echo "Preparing to run shutdown script"

    sync
    for dev in `cut -d " " -f 1 < /etc/mtab`
      do
   	if [ $dev != `printroot -r` ]
   	  then
   	    echo "About to unmount $dev"
   	    umount $dev
   	    unlock $dev 2>/dev/null
   	fi
      done
    sync
    unlock `printroot -r` 2>/dev/null
    ;;

stop)
    echo "Preparing to run stop script"
    ;;
esac

# Further initialization.
test -f /usr/etc/rc && sh /usr/etc/rc $action
test -f /usr/local/etc/rc && sh /usr/local/etc/rc $action

# Any messages?
test "$action" = start -a -f /etc/issue && cat /etc/issue
exit 0
