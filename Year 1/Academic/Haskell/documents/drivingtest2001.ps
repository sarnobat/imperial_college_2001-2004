%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: dij.dvi
%%Pages: 2 0
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o dij.ps dij.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.11.02:1301
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (dij.dvi)
@start
%DVIPSBitmapFont: Fa cmbx10 10 31
/Fa 31 120 df<B61280A819087F9620>45 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0
A2EA3FE0EA0F800D0D798C1B>I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA
0F80C7FCABEA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D2579A41B>58
D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F302038015E1A2020780
15C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC814A7FA20101
824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F4982013E151FA2017E
82017C8101FE83B500F80107B61280A4413A7DB948>65 D<B612FCA439007FF800B3B3AD
B612FCA41E397DB824>73 D<B500F80403B512F06E5EA26E5ED8007FF1E000A2D97BFF16
1EA201796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA2
6E6C141EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA26F6C48C7
FCA2923803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D4848B612F0A2EE0F
80EE070054397DB85B>77 D<B500FC0203B512F0A28080C66C6D90390003F0006F6E5A81
017B7F13798101787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F826F13806F13
C06F13E06F13F06F13F88117FCEE7FFEEE3FFF7013817013C17013E18218F17013F97013
FDEF7FFF8383A28383838383187FA2183F181F01FC160FB500FC150718031801A244397D
B84B>I<EDFFF8020FEBFF80027F14F0903A01FFC01FFC010790380007FFD91FFC010113
C0D93FF06D6C7E49486E7E49486E7E48496E7E48834890C86C7EA248486F1380A248486F
13C0A2003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0A26D5D001F18
C0A26C6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6DB40107
5B0107D9C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC3D3B7BB948>I<
B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1FFEA218
FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E002F8C9FCB3A4
B612FCA438397DB841>I<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E
717EA2717EA284A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F800
3FFCEE0FFF707F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F
130394390FFF87C071EBFF8005011400CBEA1FFC443A7DB848>82
D<003FB91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2007C1707A200
781703A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>84
D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5A
EA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF
5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE003
2A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF000
13804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F0
6E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9
C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C0
48485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01
E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023
257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F00
03EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B00
0F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>
I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC
1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F
6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025
257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A248
1381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D
>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C13
8F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907
FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E0
6C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C
6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>I<
13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A
14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2487E
A56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13FFB5
FCA412077EB3B3ACB512FCA4163A7DB91B>108 D<01FED97FE0EB0FFC00FF902601FFFC
90383FFF80020701FF90B512E0DA1F81903983F03FF0DA3C00903887801F000749DACF00
7F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0A44C
257DA451>I<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C01138000071378
0003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<903801FFC0
010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F814913
03007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C49
5A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>I<9039FF01FF80B5000F13
F0023F13FC9138FE07FFDAF00113800007496C13C06C0180EB7FE091C713F0EE3FF8A2EE
1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEBFFC0DAF00313809139FC
07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F357EA435>I<9038FE03
F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F0015
0C92C7FC91C8FCB3A2B512FEA422257EA427>114 D<90383FF0383903FFFEF8000F13FF
381FC00F383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF80
6C14C06C14F06C14F81203C614FC131F9038007FFE140700F0130114007E157E7E157C6C
14FC6C14F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>I<130FA55B
A45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816CEB
C3E090383FFFC06D1380903803FE001D357EB425>I<01FFEC3FC0B5EB3FFFA400071401
6C80B3A35DA25DA26C5C6E4813E06CD9C03E13FF90387FFFFC011F13F00103138030257D
A435>I<B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F801
7F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE
6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA22D257EA432>I<B500F1B538803FFFA4
3D07FE000FF80003E06C6C010715C082028015076C6E6C148015076C01C0ED0F00826E48
5C017FED801E5D90273FF01E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0F
FC781FF0F0A29139FEF00FF10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90
C7FCA292C7FC6E5CA2023E147C023C143C40257EA445>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmbx12 12 15
/Fb 15 117 df<EA07C0EA1FF0487E487E487E7FA31480A37E7EEA1FF7EA07C7EA000713
0FA21400A25B131E133EA25B13FC5B485A485A1207485A485A90C7FC120C112278C41F>
39 D<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F8203
3F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F0207815D173F020F
814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103
834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020FB612F0A54C
457CC455>65 D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F
7F727F727F727F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A2
1B006162193F624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04E
C8FC18F095C9FC4B447CC356>68 D<903801FFE0011F13FE017F6D7E48B612E03A03FE00
7FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91
B6FC1307013F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35D
A26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB80
07D90FFCC9FC322F7DAD36>97 D<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C0
48D9C07F133F489038001FF84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7
FCA2003F82A8001F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A16
80D8078F49C8FC018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16
FC7E000382000F82D81FF0C77ED83FC014074848020113808248C9FC177FA46D15FF007F
17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC
010F14F8D9007F90C8FC32427DAC38>103 D<EB7FC0B5FCA512037EB1ED07FE92383FFF
8092B512E002C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25C
A35CB3A7B60083B512FEA537457CC43E>I<137C48B4FC4813804813C0A24813E0A56C13
C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>
I<EC03E0EC0FF8EC1FFCEC3FFEA2EC7FFFA5EC3FFEA2EC1FFCEC0FF8EC03E091C7FCAAEC
01FF0103B5FCA5EB000F80B3B3A7EA1F80EA3FC0EA7FE0EAFFF0EC0FFEA215FC141F01E0
13F8007FEB3FF0393FC0FFE06CB512806C1400000313FCC613C0205A86C522>I<EB7FC0
B5FCA512037EB293387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A
037FC8FC15FEECC1FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02C07FEC807F6F7E
826F7E816F7F836F7F816F7F83707E163FB60003B512F8A535457DC43B>I<EB7FC0B5FC
A512037EB3B3B3A3B61280A519457CC420>I<90277F8007FEEC0FFCB590263FFFC09038
7FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC
0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5D
B3A7B60081B60003B512FEA5572D7CAC5E>I<EC1FFC49B512C0010714F0011F14FC9039
7FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82A2003F
82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5A
A26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8
FC312F7DAD38>111 D<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE
000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D
7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7
121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C
800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C
15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7
FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B5
1280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC
1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10 2
/Fc 2 122 df<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038
383F803A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2
C7123FA292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F811438
01835C00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907
C003F029267EA42F>120 D<13F8D803FE1470D8070F14F8000EEB8001121C1218003814
03003015F0EA701F1260013F130700E0010013E012C05BD8007E130F16C013FE5B151F00
0115805BA2153F000315005BA25D157EA315FE5D1401000113033800F80790387C1FF8EB
3FF9EB0FE1EB00035DA2000E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B0070
5B6C485A381E07C06CB4C8FCEA01FC25367EA429>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmtt10 10 55
/Fd 55 125 df<EA0F80EA1FC0EA3FE013F0A213F8A2121F120F1200A4120113F0A21203
13E01207EA0FC0121FEA3F80EA7F0012FE5A5A12700D1B71B22C>39
D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A485A5B12075B120F
5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121FA26C7E7F12077F
12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC130113001438164272B92C>
I<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F1480131F14C0130FEB07E0
A214F01303A214F81301A314FC1300AC130114F8A3130314F0A2130714E0A2EB0FC0131F
1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A1270164279B92C>I<
EA0F80EA1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201EA03F01207EA1F
E0EA7FC0EAFF80130012FC12700E17718A2C>44 D<007FB6FCB71280A46C150021067B9B
2C>I<EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF03903F803F848486C7EEBE000
4848137EA248487FA248C7EA1F80A2003E140F007E15C0A3007C140700FC15E0AC6C140F
007E15C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE00075CEBF0016C6C485A3901FE
0FF06CB55A6D5B6D5BD90FFEC7FCEB03F823357CB32C>48 D<1307497EA2131FA2133F13
7F13FF5A1207127FB5FC13DF139FEA7C1F1200B3AE007FB512E0B612F0A36C14E01C3477
B32C>I<EB0FF890387FFF8048B512E00007804814FC391FF80FFE393FE001FF90388000
7F48C7EA3F80007E141F00FE15C0150F6C15E01507A3127E123CC8FCA2150F16C0151F16
80153F16005D15FE4A5A14034A5A4A5A4A5A4A5AECFF804948C7FC495A495A495AEB3FE0
EB7F8049C8FC485A4848EB03C04848EB07E0EA1FE0485A48B6FCB7FCA36C15C023347CB3
2C>I<EB0FFC90387FFF8048B512E0000714F84880391FF807FEEBC0004848137F6D7F16
80151FA26C5A6CC7FCC8FC153F16005D15FE14014A5AEC1FF890381FFFF0495BA215F86D
7F90380007FEEC00FF81ED3F80ED1FC0150FA216E01507A2123C127EB4FC150F16C0A248
141F007FEC3F806DEB7F006C6C5B391FF807FE6CB55A6C5C6C14E0C66C1380D90FFCC7FC
23357CB32C>I<EC07F04A7E141F143FA2147EA214FCEB01F8A2EB03F0EB07E0A2EB0FC0
EB1F80A2EB3F00137EA25B485AA2485A5B1207485AA2485A48C7FCA2127E5AB712FC16FE
A36C15FCC8EAF800AA91387FFFF091B512F8A36E13F027347EB32C>I<000FB512FE4880
A35D0180C8FCADEB83FE90389FFF8090B512E015F8819038FE03FE9038F000FF01C07F49
EB3F8090C7121F6C15C0C8120FA2ED07E0A4123C127EB4FC150F16C0A248141F007EEC3F
80007FEC7F006C6C5B6D485A391FF80FFC6CB55A6C5C000114C06C6C90C7FCEB0FF82334
7CB22C>I<EC3FC0903801FFF801077F011F7F497F90387FE07F9039FF003F804848137F
EA03F8485A5B000FEC3F004848131E4990C7FC123F90C9FCA25A127EEB03FE90381FFF80
D8FC7F13E000FDB57EB67E9038FE07FC9038F001FE9038C0007F49EB3F8090C7121F16C0
48140F16E01507A3127EA47E150F6D14C0001F141F6D1480000F143F6DEB7F003907F801
FE3903FE07FC6CB55A6C5C6D5B011F1380D907FCC7FC23357CB32C>I<EB07FCEB3FFF90
B512C0488048803907FC07F8390FF001FC48486C7ED83F80137E157F48C77E007EEC1F80
12FE5AED0FC0A416E0A37E127E007F141F7E6D133F6C6C137F390FF001FF3807FC0F6CB6
FC6C14F76C14C7013F130FD90FF813C090C7FCA2151F1680153F1600000F5C486C137E48
6C13FE4A5A4A5A14079038801FF0391FE07FE090B55A6C91C7FC6C5B000113F838007FC0
23357CB32C>57 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCAE121FEA3F
80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2470A32C>I<1507ED1F80153F15FF14034A
1300EC1FFC4A5AECFFE0491380010790C7FCEB0FFCEB3FF8EB7FE048485A4890C8FCEA0F
FEEA1FF8EA7FF0EAFFC05BA27FEA7FF0EA1FF8EA0FFEEA03FF6C13C06C6C7EEB3FF8EB0F
FC6DB4FC01017F6D13E0EC3FF86E7EEC07FF6E13801400153F151FED0700212A7BAD2C>
60 D<007FB612F0B712F8A4003F15F0CAFCA8003FB612F0B712F8A46C15F025147DA22C>
I<127012FC7E6C7E13E06C7EEA1FFC6C7E3803FF80C67FEB7FF0EB1FF8EB0FFEEB03FF6D
13C06D6C7EEC3FF8EC0FFC6EB4FC0201138080A25C02071300EC0FFCEC3FF8EC7FE04948
5A4990C7FCEB0FFEEB1FF8EB7FF0EBFFC000035BD80FFEC8FC485AEA7FF0485A138048C9
FC5A1270212A7BAD2C>I<02FF13700107EBE0F84913F9013F13FD4913FFEBFF813901FE
007F4848131FD807F0130F1507485A491303485A150148C7FCA25A007EEC00F01600A212
FE5AAB7E127EA3007F15F06CEC01F8A26C7EA26C6C13036D14F06C6C130716E0D803FC13
1F6C6CEB3FC03A00FF81FF806DB512006D5B010F5B6D13F00100138025357DB32C>67
D<007FB612F0B712F8A37E3903F00001A7ED00F01600A4EC01E04A7EA490B5FCA5EBF003
A46E5A91C8FCA5163C167EA8007FB612FEB7FCA36C15FC27337EB22C>69
D<007FB612F8B712FCA37ED803F0C7FCA716781600A515F04A7EA490B5FCA5EBF001A46E
5A92C7FCAD387FFFE0B5FC805C7E26337EB22C>I<903901FC038090390FFF87C04913EF
017F13FF90B6FC4813073803FC01497E4848137F4848133F49131F121F5B003F140F90C7
FCA2127EED078092C7FCA212FE5AA8913803FFF84A13FCA27E007E6D13F89138000FC0A3
6C141FA27F121F6D133F120F6D137F6C7E6C6C13FF6D5A3801FF076C90B5FC6D13EF011F
13CF6DEB0780D901FCC7FC26357DB32C>I<007FB512F8B612FCA36C14F839000FC000B3
B3A5007FB512F8B612FCA36C14F81E3379B22C>73 D<EB7FFF0003B512E0000F14F84880
4880EBE003EB800048C7127FA2007E80A300FE158048141FB3A86C143FA2007E1500A300
7F5CA26C6C13FEEBF00790B5FC6C5C6C5C000314E0C66C90C7FC21357BB32C>79
D<007FB512C0B612F88115FF6C15802603F00013C0153FED0FE0ED07F0A2150316F81501
A6150316F01507A2ED0FE0ED3FC015FF90B61280160015FC5D15C001F0C8FCB0387FFF80
B57EA36C5B25337EB22C>I<90381FF80790B5EA0F804814CF000714FF5A381FF01F383F
C003497E48C7FC007E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0EA1F
FCEBFFC06C13FC0003EBFFC06C14F06C6C7F01077F9038007FFEEC07FF02001380153FED
1FC0A2ED0FE0A20078140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE01FF
90B55A5D00F914F0D8F83F13C0D8700790C7FC23357CB32C>83 D<007FB612FCB712FEA4
3AFC007E007EA70078153CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C>I<3B7F
FF803FFFC0B56C4813E0A36C496C13C03B03F00001F800B3AF6D130300015DA26D130700
005D6D130F017F495A6D6C485AECE0FF6DB5C7FC6D5B010313F86D5B9038003F802B3480
B22C>I<D87FF0EB07FF486C491380A36C486D1300001FC8127CA46C6C5CA76C6C495AA4
143E147FA33A03E0FF83E0A214F7A201E113C3A3000101E35BA201F113C701F313E7A314
C1A200005DA201F713F71480A301FF13FF017F91C7FC4A7EA4013E133E29347FB22C>87
D<387FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC17416FB92C>91
D<387FFFFCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17417DB92C>93
D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8
127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F
14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>
97 D<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E484813
1890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE03
FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>99 D<EC0FFE4A7EA380EC003F
AAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC007E
80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE
6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E4880
3907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075AB7FC
A416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13
FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0FF8EC3FFE91
B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26
000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<ED03F8903907F80FFC90391F
FE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C0001300
001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7
FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001FF848
C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83FE0EB
0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C>I<EA
7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC01F02
807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>I<1307
EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512
FCB612FEA36C14FC1F3479B32C>I<140EEC3F80A2EC7FC0A3EC3F80A2EC0E0091C7FCA7
48B512804814C0A37EC7120FB3B3A2141F003C1480007E133FB414005CEB01FEEBFFFC6C
5B5C001F5B000790C7FC1A467CB32C>I<EA7FE0487EA3127F1201AA91381FFFF04A13F8
A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE90B5
FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A7FFFC0FFFC
B500E113FEA36C01C013FC27337EB22C>I<387FFFE0B57EA37EEA0003B3B3A5007FB612
80B712C0A36C158022337BB22C>I<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD87FFF
13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C01380B33B7F
FC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C>I<397FF01F
E039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F5B5BA2
5BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB07FCEB1FFF017F13C0
48B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7121F007EEC0F
C0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C485A
3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C>I<397FF01FE039FF
F8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049EB03F85BED
01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138
E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA3
2C>I<903903FC078090391FFF0FC0017F13CF48B512EF4814FF3807FE07380FF0014848
7E49137F4848133F90C7FC48141F127E150F5AA87E007E141FA26C143F7F6C6C137F6D13
FF380FF0033807FC0F6CB6FC6C14EF6C6C138F6D130FEB07F890C7FCAD0203B5FC4A1480
A36E140029367DA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7F
E1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C2624
7EA32C>I<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0
007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE00
78147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F81480
39701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03
C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7E
AD2C>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE
03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C>I<3A7FFF01FFFCB514FE14
8314016C15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C137CA2
017E13FC013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA214FF6D
90C7FCA26D5A147C27247EA32C>I<D87FFFEB7FFF6EB5FCB515806C16004A7ED807C0EB
01F0A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D9038F9E3
CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA32C>I<
3A3FFF03FFF048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F83EC
87E090380FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF809038
07CFC0EB0FC7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01FFFC
1483B514FE6C15FC140127247EA32C>I<3A7FFF01FFFCB5008113FE148314816C010113
FC3A03E0000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F13FC6D
5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2143E
A2147E147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C
5A6C5AEA07E027367EA32C>I<127812FCB3B3B3A9127806416DB92C>124
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx12 14.4 20
/Fe 20 117 df<BA7E19FCF1FF801AF01AFCD8000701F0C7000F13FF060014C0071F7F07
0713F807017F737F747E747F747F86747F747F8886888688A2757EA31D8087A21DC0A51D
E0A387A963A31DC0A51D80A2631D00A3515AA2646264505B6264505B505B5090C7FCF2FF
FE4F5B07075B071F5B96B512C0060F91C8FCBB5A1AF01AC007FCC9FC19805B527CD167>
68 D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F
0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC
4901F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B481A3F
A24849181FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C7003FEB
C000A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D
13FF6D6C6D5C6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC07F03
3FEE001F030703FC1307DB007F02E01301040149CAFC5B5479D26A>71
D<B8D8C003B8FCA5D8000701F8C9001FEBE000B3AE92BAFCA503F8C9121FB3B1B8D8C003
B8FCA560527CD169>I<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F
9026FFFC006D5A4801E0EB0FFD4801800101B5FC4848C87E48488149150F001F82498112
3F4981007F82A28412FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF80
16FC6CEDFFC017F06C16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16
801400030F15C0ED007F040714E01600173F050F13F08383A200788200F882A3187FA27E
A219E07EA26CEFFFC0A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7F
F0903B1FFFC003FFE0486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8
FC3C5479D24B>83 D<B700FC017FB600FE91B612F0A5D8003F01C0C8001F01E0C9EBF800
6F71EE0FC06D7161876F1C1F6D7196C7FC6F8373606D1E3E6F836D7160876F1CFC6D666F
4B801F016D66704A806E525A88704A17076E059F5F70021F80080F160F6E6570023F806E
DC3E074CC8FC8870027E5F6EDC7C03163E7002FC804F6C167E6E1C7C700101814F6C16FC
6E745B70010317016E4C6D5D060716C00580496D14036F63DDC00F16E04F6D14076F07F0
5BDDE01F170F6F92C76C5D1DF8DDF03E6E141F6F98C9FCDDF87E16FC067C6E5C6FF1FE3E
DDFCFC177E6F4A6E147C1DFFDDFFF06E14FC6F62A24E816F62A270496F5BA24E817061A2
95C97E7061A270487090CAFCA37048705AA24D1601040360A27048705A84537DD18B>87
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC01
0315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83
485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5
FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13
F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901817F90
3A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC48
17E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14
037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0F
FFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<DA3FFF14FF0103
B5D8F00713C0010FDAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F
48496C13E0484990387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2
003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FC
D803EF14FC01C314F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817
FF18C06C836C836C836D828448B9FC12074848C700031480D81FF8EC003F484815074848
6F13C083485A83A56D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF8
6C01E049485A6C01FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F
7CB543>103 D<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391F
E07FFC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45C
B3ACB6D8F807B612C0A542537BD24B>I<137F497E000313E0487FA2487FA76C5BA26C5B
C613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<EB3FF0
B5FCA51203C6FCB3A54CB512F8A59339003FFE00EF1FF0EF3FC04D5A4DC7FCEE03FEEE07
F84C5A4C5AEE7FC04CC8FC4B5A4B5AED0FF8ED1FE04B7E4B7EECF1FF02F37F02F77F91B6
FC83159F030F7F02FE80DAF8077F4A7E6F7F6F7F83707E82707F84707F707F82707F8470
7F177F717E4D13C0B6D8F003B6FCA540537CD247>107 D<EB3FF0B5FCA512017EB3B3B3
B1B612F0A51C537BD225>I<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC
92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45C
B3ACB6D8F807B612C0A542367BB54B>110 D<913801FFE0021F13FE91B612C0010315F0
010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48
834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5D
A26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC90
3A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<903A3FF001FF
E0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9FFE0EB1FFFC6
02806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A0060A36118FF
A2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02F8B6
12E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<90397FE003FE
B590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FEC
E78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB5
37>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148
487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C0
6C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078
EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01
FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6
147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8
FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B02
1F5B020313802A4D7ECB34>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmti10 10 18
/Ff 18 121 df<EA01E0EA07F0120F13F8121FA3120FEA07B0EA0030A21370136013E013
C0120113801203EA0700120E5A5A5A5A5A0D196EB919>39 D<14F8EB07FE90381F871C90
383E03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300
A21407485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C48
5B9038038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97
D<147F903803FFC090380FC1E090381F0070017E13784913383901F801F83803F0031207
13E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578007C14F0
007EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677A426>99
D<ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA21680A2153FA202F813
00EB07FE90381F877F90383E03FF017C5BEBF80112013803F00048485B120FEBC001121F
5DEA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0253B77
B92A>I<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A120F4913
F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530
007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690
C7FC1D2677A426>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F
80011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F12074914
00A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF39038
0FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07
E0381FFF80D803FEC8FC24367CA426>103 D<EB03F0EA01FFA3EA00075CA3130F5CA313
1F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F140048
5A16C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C
15F8163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E380
48903800FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7
FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B
1203A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5A
EA07F8EA01E0143879B619>I<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137E
A213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7
FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F8012
3B79B915>108 D<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F
39383FF00114E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA215
0F00015D5B151F5E12034990383F8380160316070007027F130049137EA2160E000F147C
49141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>110
D<147F903803FFC090380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B
120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0
140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677
A42A>I<9039078007C090391FE03FF090393CF0787C903938F8E03E9038787FC0017049
7EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2
010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E
3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512C0A3293580A42A>I<3903
C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F80007815000070
1300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F5B
A3123F90C9FC120E212679A423>114 D<14FE903807FF8090380F83C090383E00E04913
F00178137001F813F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C
7F6D13807F010F13C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E00
705B6C5B381E03E06CB45AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480
A3133F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5B
A3121FEB801CA2143C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00
EA07FCEA01F0183579B31C>I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C
0038140F131F007815C01270013F131F00F0130000E015805BD8007E133FA201FE14005B
5D120149137EA215FE120349EBFC0EA20201131E161C15F813E0163CD9F0031338140700
01ECF07091381EF8F03A00F83C78E090393FF03FC090390FC00F00272679A42D>I<01F0
1507D803FC903903801F80D8071E903907C03FC0D80E1F130F121C123C0038021F131F49
EC800F00701607A249133FD8F07E168000E0ED000313FEC64849130718000001147E5B03
FE5B0003160E495BA2171E00070101141C01E05B173C1738A217781770020314F05F0003
010713016D486C485A000190391E7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003
F0322679A437>119 D<903907E007C090391FF81FF89039787C383C9038F03E703A01E0
1EE0FE3803C01F018013C0D8070014FC481480000E1570023F1300001E91C7FC121CA2C7
5AA2147EA214FEA25CA21301A24A1370A2010314F016E0001C5B007E1401010714C000FE
EC0380010F1307010EEB0F0039781CF81E9038387C3C393FF03FF03907C00FC027267CA4
27>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr10 10 58
/Fg 58 122 df<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E>12 D<121C127FEAFF80A8EA7F00AB123EAB121CABC7
FCA8121C127FEAFF80A5EA7F00121C093C79BB17>33 D<001C131C007F137F39FF80FF80
A26D13C0A3007F137F001C131C00001300A40001130101801380A2000313030100130048
5B00061306000E130E485B485B485B006013601A197DB92A>I<121C127FEAFF80A213C0
A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A1979B917>39
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F
6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0
B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7
FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078
C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0A3127F121C1200A412011380
A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA516057F941C>I<121C127F
EAFF80A5EA7F00121C0909798817>I<150C151E153EA2153C157CA2157815F8A215F014
01A215E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A2
5C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B
1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A
12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007
147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C15
80A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FC
EB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB5
12F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E
486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D
4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303
48481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF
4913C03901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC8
5A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E
7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070
ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A
>I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB
030313071306130C131C131813301370136013C01201EA038013005A120E120C5A123812
305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780
133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE903878
0F803907E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490
C71300485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F8000
01B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90
383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2
485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E
497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B
15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<123012
38123E003FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5D
C712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495A
A3133FA5137FA96DC8FC131E233B7BB82A>I<121C127FEAFF80A5EA7F00121CC7FCB212
1C127FEAFF80A5EA7F00121C092479A317>58 D<121C127FEAFF80A5EA7F00121CC7FCB2
121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A121812385A12600934
79A317>I<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA202
1C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F16
7FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201
486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B712C016F816FE00019039
8001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0
A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE
0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>68 D<B812F8A30001903880001F
6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A2150715
1F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>70
D<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D49
7EB648B512FEA337397DB83E>72 D<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A39
7EB81E>I<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A216
011603160FEE1FE0486D13FFB8FCA32D397DB834>76 D<B5913807FFFE8080C69238007F
E06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E
7E81140F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED
01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E
487ED80FFC151EB500C0140EA2170637397DB83E>78 D<003FB812E0A3D9C003EB001F27
3E0001FE130348EE01F00078160000701770A300601730A400E01738481718A4C71600B3
B0913807FF80011FB612E0A335397DB83C>84 D<B5D8FC07B5D8F001B5FCA30007902780
001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F
6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C
6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA20380
5D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA
0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B
7EB855>87 D<B500FE91383FFFE0A3000301E0913807FE00C649EC03F0017F6F5A606D6C
5D6D6C140395C7FC6D6C1406A26D6C5C6D6C141C17186D6C143817306D6D5B6E6C13E05F
91383FE0015F91381FF003DA0FF890C8FC1606913807FC0E160C913803FE1C913801FF18
5E6E13B016E0157F6F5AB3A24B7E023FB512C0A33B397FB83E>89
D<3901800180000313033907000700000E130E485B001813180038133800301330007013
7000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80
390E000E001A1974B92A>92 D<EA01801203EA0700120E5A12181238123012701260A212
E05AA412CEEAFF8013C0A3127FA2EA3F80EA0E000A197AB917>96
D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5A
C8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA314
01A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007
C026277DA52A>I<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F80
9039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FE
A216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800
FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F839
07E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA2
6C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF
00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F90
38F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E
127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F9038
1FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0
D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA512
7EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E
03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F879038
3F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A3
1C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E0
07C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48
C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C0
3A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E000
3F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>
I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF700
13FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE048
7EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB
01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E
00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012
FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438
147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F81
1680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD
487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E
903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A249
5CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FF
EB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C49
7EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F8484813
7C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A900
7E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13
F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1
E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FE
A3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038
F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381F
FE0190387E07819038FC01C33903F000E3000714774848133749133F001F141F485A150F
48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF3900
7E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FF
EB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A4
5BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00
707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB
007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FF
F038C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2
D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>
I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000
EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B53880
3FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E01
7E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FC
A214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF8
6C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E90
38EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC600
1360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A
130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC01
7E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E
8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D
7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF0
6C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070
010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214
701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357E
A32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr12 12 18
/Fh 18 122 df<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F48
48EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815
FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D
130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131
>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA320
4278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA
7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C48
13076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D
4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A48481438
48C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<14FF010713E0011F13
F890387F80FC9038FC007E48487F4848EB1F804848EB0FC0000FEC07E0485AED03F0485A
16F8007F140190C713FCA25AA216FE1500A516FFA46C5CA36C7E5D121F7F000F5C6C6C13
0E150C6C6C131C6C6C5BD8007C5B90383F01E090390FFF80FE903801FE0090C8FC150116
FCA4ED03F8A216F0D80F801307486C14E0486C130F16C0ED1F80A249EB3F0049137E001E
C75A001C495A000F495A3907E01FE06CB51280C649C7FCEB1FF028447CC131>57
D<B912F0A3000101C0C7127F6C6C48EC0FF817031701170018781838A2181CA3180CA418
0E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC8001ED007C163C161CA2160C
A793C8FCB08048487EB612F8A337447CC340>70 D<B56C020FB5FC8080C6040013F06D6C
ED1F80D96FF8ED0F00A2D967FC1506EB63FEA2EB61FF01607FA26E7E6E7EA26E7E6E7EA2
6E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3F
E0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF701386A2EF7FC6EF3FE6A2EF1FF6EF0FFE
A217071703A217011700A201F0167E183E487ED80FFF161EB500F0150EA2180640447CC3
49>78 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E48
6C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA
03FC485A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C000
3F13013A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<167FED3FFF
A315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D5AD803F87F48
487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B
00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803FFE09026007F
0013002F467DC436>100 D<EB01FE903807FFC090381F03F090387E00FC49137E48487F
485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7FCA25AA390B6FC
A290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03
806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<EA01FC12
FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FECE000D9FDC0
7F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC436>104
D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487E
B512F8A315437DC21C>I<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F
913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F3880
4A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512
E0A34B2C7DAB52>109 D<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48
486D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C
1680A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C
6C495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>111
D<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C
01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>114 D<1306A5130EA4131EA3133E
137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150CAA017E131C017F1318A26D
133890381F8030ECC070903807E0E0903801FFC09038007F001E3E7EBC26>116
D<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E1200160C017F5CA28001
3F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FCA26E5A01011306A26D
6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C7EAA33>118
D<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C6D141C6D1418
A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FCA29038
01FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA2
1406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA
03F02E3F7EAA33>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmr17 17.28 20
/Fi 20 119 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCB3B3A2120FEA
3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C3E74BD24>58 D<B912F018FF19E019F8C6
01FCC8EA7FFED93FF892380FFF80011F04017F9538007FF0F11FF8737EF103FE737E737F
747E747E747E1A0F87747E1A0387747EA2741380A2F37FC0A21CE01B3FA21CF0A21B1F1C
F8A31CFCA21B0FA41CFEAF1CFCA51B1F1CF8A4F33FF0A21CE0A21B7F1CC01BFF1C80A250
1300A2505A505AA2505A505A505A505A1AFF4F5B4F90C7FCF107FCF11FF8F17FF0953801
FFC0013F04075BD9FFFCDB7FFEC8FCBA12F819E096C9FC18F0576279E165>68
D<DDFFF015C0040F01FF1401047F14E00303B600F81303030F9038E003FEDB3FFCC7007F
1307DBFFE0EC0FC002030180913803E00F4A48C83801F01F4A48ED0078DA3FF0EE3C3F4A
48161E4A48EE0F7F4949EE07FF4990CA7E495A4948834948835C013F197F4948183F495A
1B1F485B1B0F4890CCFCA248481907A2485A1B03121F5BA2123F1B015BA2127F98C8FCA3
5B12FFB06C7EA24EB712E0A3123F95C7000FEBF0006D06015B64001F857FA2120F7F1207
A26C7EA26C7FA26C7FA26D7E6D7E131F806D7E6D6C5F6D7E6D6D5E6D7F6E6CEE07BFDA3F
F8EE0F3FDA0FFCEE1F1F6EB4163E6E01C0EDFC0F020001F0913801F807DB3FFEEC0FE092
260FFFF09038FF8003030390B538FE0001DB007F02F81300040F02C091C7FC040001F8CA
FC5B667AE368>71 D<B7020FB612F0A4C691C9000FEBF000D93FFC040313C06D48705BB3
B3A391BAFCA402F8C91201B3B3A7496C4C7F90B5040F13F0B7020FB612F0A4546279E163
>I<B912C018FEF0FFC019F0C601FCC813FCD93FF8ED0FFF011F04037F06007FF13FF073
7E737E1907737E86731380A27313C0A31BE01A7FA21BF0A91BE0A21AFF1BC0A34F13801B
00614F5A624F5A4F5AF17FE04F5A060390C7FCF01FFE943801FFF891B812E096C8FC18F8
02F8CCFCB3B3A4497E90B5FCB7FCA44C6279E15A>80 D<003FBC12F8A49126C000039038
C0000301FCC76C49EB007F01F0190F01C019074848F103FC90C81701007E1A00007C1B7C
A300781B3CA400701B1CA600F01B1E481B0EA7C91800B3B3B3A54C7FA2041F13F84AB87E
A457627CE160>84 D<EC3FF0903803FFFE010F6D7E90393FC03FE090397E0007F801F86D
7ED801E06D7E48486D7E48486E7E48C86C7E7F01F06E7E487E6D6E7EA3707EA36C5AEA03
E0C9FCA6167FED7FFF020FB5FC91387FF807903801FF80903807FC00EB1FF0EB7FC0495A
D803FEC7FC485A120F5B485A485AA2484817E0A312FF5BA2160FA3161F6D141B007F153B
16736D913971FC01C06C6C14E1001FEC01C1D80FFC903A0780FE03806C6C903A0F00FF07
002701FF807E6DB4FC27007FFFF86D5A011F01E0EB1FF8010190C7EA07E03B417ABF42>
97 D<181EEF3FFEEE07FFA4EE000F1703A21701B3AAEDFF80020F13F8023F13FE9139FF
803F81903A03FC0007C14948EB01E1D91FE0EB00F94948147D4948143D49C8121F484815
0F491507120348481503491501120F121F5BA2123F5B127FA45B12FFAD127F7FA3123FA2
7F121FA26C6C1503A26C6C150712036D150F6C6C151F0000163D137F6D6CECF9FF6D6CEB
01F1D90FF0D903C113C06D6CD90F81EBFF80D901FFEB7F019039007FFFFC021F13E00201
010091C7FC41657CE349>100 D<EC03FE91381FFFE091B512F8903901FE03FE903A07F0
007F8049486D7ED93FC06D7E49C76C7E496E7E4914034848814848140100078249140000
0F8283485A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA312
3FA27F121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C
6D6C5C6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC020F13F00201
138032417CBF3A>I<F03F80DA03FC903801FFE091273FFFC00713F091B539F01FC1F890
3B03FC03FC3E03903A07F000FE784948EB7FE04948EB3FC04948011FEB01F049C76C6CC7
FC01FE6E7EA248486E7EA2000382A2491401000782AA00035E6D1403A200015EA26C6C4A
5AA2017F4A5A6D6C495A6D6C495A496C49C8FCD937F013FE903973FC03FC0160B512F0D9
E03F13C0DA03FCC9FC4848CBFCA57FA27FA27F6C7E13FF91B512FE6DECFFF06D15FE6D6F
7E6D16E084013F16FC01FEC700017FD803F8EC001FD807E0ED03FF484803001380484816
7F003FEF3FC090CA121F127EF00FE012FE481707A66C170F007E18C0A2007F171F6C6CEE
3F806C6CEE7F00000F177ED807F04B5A6C6C4B5A6C6C4B5AD8007FED1FC0D93FE0ECFF80
D90FFED90FFEC7FC0101B612F0D9003F1480020101F0C8FC3D5E7DBF42>103
D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FE0923803FFFC030F13FFDB3F0013
C00378EB1FE04B6D7EDAC1C06D7EDAC3808002C7C7120302CE81170114DC14D802F86E7E
5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A442647DE349>I<133C13FF487F
487FA66C5B6C90C7FC133C90C8FCB3A2EB03C0EA07FF127FA41201EA007FA2133FB3B3AC
497E497EB612E0A41B5F7DDE23>I<EB03C0EA07FFB5FCA41201EA007FA2133FB3AB0403
B512F8A40400148094387FFC0018E06095C7FC177E5F17F04C5A4C5A4C5A4CC8FC163E5E
5E4B5A4B5A4B5A4B5A151F4B7E4B7E15FF02C17F9138C3CFF8ECC7879138CF07FC9138FE
03FEECFC0102F87F4A6C7F4A137F4A80707E161F83707E160783707E160183707F177F84
717E171F84717E84A284496CEDFF80496C4A13E0B600F090B6FCA440647CE346>107
D<EB03C0EA07FFB5FCA41201EA007FA2133FB3B3B3B3AD497E497EB612F0A41C647DE323
>I<D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C00378EB1FE04B6D7E0001
D9C1C06D7E27007FC3808002C7C71203D93FCE81170114DC14D802F86E7E5CA35CA35CB3
B3496C4A7F496C4A7FB6D8F003B612C0A4423F7DBE49>110 D<D903C0EB7FC0D807FF90
3807FFFCB5011F13FFDB7F0013C003F8EB1FF0DAC3E0EB07F80001D9C7806D7E26007FCF
C76C7E02DE6E7ED93FFC6F7E4A6F7E4A82181F4A82727E5C727EA2727EA3727EA41A8084
AC4E1300A54E5AA2611807A24E5A6E5E181F6E4B5A6E5E187F6E4B5A02DE4A90C7FC02CF
4A5ADAC780495ADAC3C0EB0FF0DAC1F0EB3FE0913AC07E01FF806FB448C8FC030F13F803
00138093CAFCB3A3497E497EB612F0A4415B7DBE49>112 D<9039078003F8D807FFEB0F
FFB5013F13C092387C0FE0913881F01F9238E03FF00001EB838039007F8700148FEB3F8E
029CEB1FE0EE0FC00298EB030002B890C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612
FCA42C3F7CBE33>114 D<9139FFE00180010FEBFC03017FEBFF073A01FF001FCFD803F8
EB03EFD807E0EB01FF48487F4848147F48C8123F003E151F007E150F127CA200FC1507A3
16037EA27E7F6C7E6D91C7FC13F8EA3FFE381FFFF06CEBFF806C14F86C14FF6C15C06C6C
14F0011F80010714FED9007F7F02031480DA003F13C01503030013E0167F00E0ED1FF016
0F17F86C15071603A36C1501A37EA26C16F016037E17E06D14076DEC0FC06D1580D8FDF0
141FD8F8F8EC7F00013E14FC3AF01FC00FF80107B512E0D8E001148027C0003FF8C7FC2D
417DBF34>I<1438A71478A414F8A31301A31303A21307130F131FA2137F13FF1203000F
90B6FCB8FCA3260007F8C8FCB3AE17E0AE6D6CEB01C0A316036D6C148016076D6C14006E
6C5A91383FC01E91381FF07C6EB45A020313E09138007F802B597FD733>I<B66C49B512
E0A4000101F8C8387FFE0026007FE0ED1FF819E0013F705A61131F6E93C7FC130F180E6E
151E0107161C8001035EA26E157801011670806D5EA26F1301027F5DA26E6C495AA26F13
07021F92C8FCA26E6C130EA26F131E0207141CA26F133C020314388102015CA26F13F06E
5C168092387F81C0A216C3033F5B16E3DB1FE7C9FCA216FF6F5AA26F5AA36F5AA26F5AA3
6F5A433F7FBD46>118 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
1 0 bop 754 739 a Fi(Hask)l(ell)45 b(Driving)g(T)-11
b(est:)57 b(Graphs)43 b(and)h(P)l(aths)1346 1162 y Fh(F)-8
b(rida)m(y)31 b(9th)i(No)m(v)m(em)m(b)s(er)g(2001)150
1469 y Fg(A)j Ff(dir)l(e)l(cte)l(d)j(gr)l(aph)e Fg(consists)e(of)i(a)e
(collection)h(of)g(no)r(des,)i(eac)n(h)d(with)i(asso)r(ciated)e(iden)n
(ti\014ers)g(and)h(a)g(set)g(of)150 1569 y(directed)22
b(edges,)g(where)f(eac)n(h)g(edge)g(connects)h(a)f(giv)n(en)g(source)f
(no)r(de)i(to)g(a)f(giv)n(en)g(target)g(no)r(de,)i(b)r(oth)f(sp)r
(eci\014ed)150 1669 y(b)n(y)40 b(their)g(iden)n(ti\014ers.)74
b(As)40 b(an)f(example)h(the)g(no)r(des)g(migh)n(t)g(represen)n(t)f(to)
n(wns)g(or)g(cities)i(and)e(the)i(edges)150 1768 y(migh)n(t)27
b(represen)n(t)f(the)h(roads)e(connecting)i(them.)37
b(A)27 b Ff(weighte)l(d)i Fg(graph)c(asso)r(ciates)h(a)g(n)n(umerical)g
(w)n(eigh)n(t)h(with)150 1868 y(eac)n(h)i(edge)h(whic)n(h)g(migh)n(t)g
(b)r(e)g(used,)h(for)f(example,)g(to)g(represen)n(t)f(the)h(distance,)h
(time,)g(monetary)e(cost)h(etc.)150 1968 y(asso)r(ciated)d(with)h(mo)n
(ving)f(from)g(one)h(no)r(de)g(to)g(another)e(along)h(a)h(giv)n(en)f
(edge.)37 b(The)28 b Ff(single)j(sour)l(c)l(e)e(al)t(l)i(p)l(aths)150
2067 y Fg(algorithm)g(calculates)h(the)h(minim)n(um)g(cost)f(of)h(mo)n
(ving)e(from)h(a)h(giv)n(en)e(start)h(no)r(de)h(to)f(all)h(other)e(no)r
(des)i(in)150 2167 y(the)e(graph.)46 b(This)30 b(exercise)g(requires)f
(y)n(ou)h(to)h(write)g(a)f(suite)h(of)g(functions)g(for)f(manipulating)
h(graphs)e(and,)150 2267 y(ultimately)-7 b(,)28 b(for)f(solving)g(the)h
(single)f(source)f(all)h(paths)h(problem.)150 2541 y
Fe(Directed)46 b(Graphs)e(in)h(Hask)l(ell)150 2723 y
Fg(Directed)29 b(graphs)e(can)h(b)r(e)h(represen)n(ted)f(in)h(man)n(y)f
(w)n(a)n(ys)f(in)i(Hask)n(ell.)39 b(Here)29 b(w)n(e)f(will)h(assume)f
(that)h(b)r(oth)g(the)150 2823 y(no)r(de)f(iden)n(ti\014ers)g(and)h
(edge)f(w)n(eigh)n(ts)f(are)g(in)n(tegers.)39 b(An)28
b(edge)g(will)h(th)n(us)f(b)r(e)h(a)f(pair)g(of)g(iden)n(ti\014ers,)h
(the)f(\014rst)150 2922 y(elemen)n(t)g(iden)n(tifying)g(the)g(source)f
(no)r(de)h(and)g(the)g(second)g(the)g(target)f(no)r(de.)38
b(A)28 b(graph)f(will)h(b)r(e)g(represen)n(ted)150 3022
y(b)n(y)f(a)g(list)h(of)g(\(edge,w)n(eigh)n(t\))f(pairs,)g(th)n(us:)237
3188 y Fd(type)42 b(Id)h(=)g(Int)237 3287 y(type)f(Weight)f(=)i(Int)237
3387 y(type)f(Edge)g(=)h(\()g(Id,)g(Id)f(\))237 3487
y(type)g(Graph)g(=)h([)g(\()g(Edge,)f(Weight)f(\))i(])150
3653 y Fg(W)-7 b(e)34 b(will)f(arbitrarily)f(tak)n(e)g(the)i(source)e
(to)h(b)r(e)h(the)f(no)r(de)h(lab)r(elled)f(0.)54 b(An)34
b(example)e(of)i(a)f(graph)f(is)h(sho)n(wn)150 3752 y(b)r(elo)n(w:)966
5321 y @beginspecial 0 @llx 0 @lly 303 @urx 235 @ury
2272 @rwi @setspecial
%%BeginDocument: graph.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: graph.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3c
%%CreationDate: Fri Nov  2 12:32:21 2001
%%For: ajf@owl (Tony Field,376H,48364,)
%%BoundingBox: 0 0 303 235
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 235 moveto 0 0 lineto 303 0 lineto 303 235 lineto closepath clip newpath
% Fill background color
0 0 moveto 303 0 lineto 303 235 lineto 0 235 lineto
closepath 1.00 1.00 1.00 setrgbcolor fill

-6.0 295.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Arc
7.500 slw
gs  clippath
4518 2874 m 4636 2854 l 4591 2588 l 4570 2820 l 4473 2608 l cp
eoclip
n 2887.5 3037.5 1697.9 -96.3 -6.3 arc
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 4473 2608 m 4570 2820 l 4591 2588 l 4539 2642 l 4473 2608 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
538 2622 m 653 2656 l 730 2397 l 609 2596 l 615 2363 l cp
eoclip
n 2010.3 2942.9 1445.7 -86.4 -167.3 arcn
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 615 2363 m 609 2596 l 730 2397 l 660 2423 l 615 2363 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
1277 4411 m 1301 4294 l 1036 4239 l 1245 4344 l 1012 4357 l cp
eoclip
n 1365.8 3418.4 936.0 -168.1 95.6 arcn
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 1012 4357 m 1245 4344 l 1036 4239 l 1068 4307 l 1012 4357 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
2157 1747 m 2059 1678 l 1903 1898 l 2083 1750 l 2001 1968 l cp
eoclip
n 4408.9 3487.5 2904.7 167.3 -142.6 arc
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 2001 1968 m 2083 1750 l 1903 1898 l 1978 1896 l 2001 1968 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
1873 4513 m 1847 4630 l 2110 4689 l 1904 4582 l 2136 4572 l cp
eoclip
n 2496.8 2264.8 2392.4 29.7 105.1 arc
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 2136 4572 m 1904 4582 l 2110 4689 l 2079 4621 l 2136 4572 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
3102 2810 m 3173 2907 l 3391 2748 l 3174 2832 l 3320 2651 l cp
eoclip
n 3723.7 3467.4 842.8 -33.7 -132.9 arcn
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 3320 2651 m 3174 2832 l 3391 2748 l 3319 2726 l 3320 2651 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
4474 3412 m 4399 3318 l 4188 3488 l 4401 3394 l 4263 3581 l cp
eoclip
n 3820.2 2782.3 846.9 142.3 44.4 arcn
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 4263 3581 m 4401 3394 l 4188 3488 l 4260 3506 l 4263 3581 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
2311 1798 m 2194 1772 l 2135 2035 l 2243 1829 l 2252 2061 l cp
eoclip
n 3386.3 2158.4 1191.5 129.7 -162.5 arc
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 2252 2061 m 2243 1829 l 2135 2035 l 2203 2004 l 2252 2061 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
2865 2790 m 2985 2790 l 2985 2520 l 2925 2745 l 2865 2520 l cp
eoclip
n 1287.5 2675.0 1640.6 -35.4 3.5 arc
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 2865 2520 m 2925 2745 l 2985 2520 l 2925 2565 l 2865 2520 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
2752 3332 m 2668 3246 l 2475 3436 l 2678 3321 l 2559 3521 l cp
eoclip
n 3037.5 3787.5 592.9 161.6 -124.7 arc
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 2559 3521 m 2678 3321 l 2475 3436 l 2549 3447 l 2559 3521 l 
 cp gs 0.00 setgray ef gr  col0 s
% Arc
7.500 slw
gs  clippath
791 3103 m 691 3171 l 843 3394 l 767 3175 l 942 3327 l cp
eoclip
n -16762.5 15150.0 21229.4 -31.1 -34.4 arcn
gs col0 s gr
 gr

% arrowhead
15.000 slw
n 942 3327 m 767 3175 l 843 3394 l 868 3323 l 942 3327 l 
 cp gs 0.00 setgray ef gr  col0 s
7.500 slw
% Ellipse
n 2400 1500 318 318 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4650 3150 318 318 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 600 2925 318 318 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1575 4425 318 318 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2925 3075 318 318 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2700 4200 318 318 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 300.00 scf sf
2325 1575 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 300.00 scf sf
4575 3225 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 300.00 scf sf
2850 3150 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 300.00 scf sf
525 3000 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 270.00 scf sf
3900 1575 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
3825 2550 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
3525 4650 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 270.00 scf sf
1425 2775 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 270.00 scf sf
1200 1650 m
gs 1 -1 sc (6) col0 sh gr
/Times-Roman ff 270.00 scf sf
450 4125 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
975 3900 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 270.00 scf sf
3675 3900 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 270.00 scf sf
2175 2850 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
2925 2175 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 300.00 scf sf
2625 4275 m
gs 1 -1 sc (5) col0 sh gr
/Times-Roman ff 270.00 scf sf
2250 3750 m
gs 1 -1 sc (9) col0 sh gr
/Times-Roman ff 300.00 scf sf
1500 4500 m
gs 1 -1 sc (3) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 275 5520 a(This)27 b(can)g(b)r(e)h(represen)n(ted)f(as)g
(follo)n(ws)f(using)h(the)h(ab)r(o)n(v)n(e)f(sc)n(heme:)1892
5919 y(1)p eop
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
2 1 bop 150 390 a Fd(graph)42 b(::)g(Graph)150 490 y(graph)g(=)h([)g
(\()g(\()g(0,)g(1)g(\),)g(1)g(\),)586 589 y(\()g(\()g(0,)g(2)g(\),)g(3)
g(\),)586 689 y(\()g(\()g(0,)g(4)g(\),)g(6)g(\),)586
789 y(\()g(\()g(1,)g(2)g(\),)g(1)g(\),)586 888 y(\()g(\()g(1,)g(3)g
(\),)g(3)g(\),)586 988 y(\()g(\()g(2,)g(0)g(\),)g(1)g(\),)586
1088 y(\()g(\()g(2,)g(1)g(\),)g(2)g(\),)586 1187 y(\()g(\()g(2,)g(3)g
(\),)g(1)g(\),)586 1287 y(\()g(\()g(3,)g(0)g(\),)g(3)g(\),)586
1386 y(\()g(\()g(3,)g(4)g(\),)g(2)g(\),)586 1486 y(\()g(\()g(4,)g(3)g
(\),)g(1)g(\),)586 1586 y(\()g(\()g(5,)g(2)g(\),)g(9)g(\))g(])150
1752 y Fg(F)-7 b(or)25 b(example,)h(the)g(edge)f(from)h(no)r(de)g(2)f
(to)h(no)r(de)g(0)f(with)h(w)n(eigh)n(t)f(1)h(is)f(represen)n(ted)g(b)n
(y)g(the)i(pair)e Fd(\(\(2,0\),1\))p Fg(.)275 1851 y(The)34
b(ob)5 b(jectiv)n(e)34 b(of)g(the)h(single-source)d(shortest)h(path)i
(algorithm)e(is)h(to)g(compute)h(the)g(minim)n(um)g(cost)150
1951 y(of)i(mo)n(ving)e(from)h(a)g(giv)n(en)g(source)g(\(here)g(no)r
(de)g(0\))h(to)f(all)h(target)e(no)r(des;)41 b(the)c(costs)f(here)g(is)
g(the)h(sum)g(of)150 2051 y(the)d(w)n(eigh)n(ts)f(of)h(eac)n(h)g(edge)f
(forming)g(the)i(\\shortest)d(path".)56 b(If,)36 b(ho)n(w)n(ev)n(er,)e
(there)f(is)h(no)g(w)n(a)n(y)f(of)h(reac)n(hing)150 2150
y(the)c(target)g(from)f(the)i(source)e(the)h(cost)g(will)g(b)r(e)g
(mark)n(ed)f(as)g(b)r(eing)i(in\014nite.)45 b(T)-7 b(o)29
b(do)h(this)g(w)n(e)g(de\014ne)g(a)g(new)150 2250 y(algebraic)c(data)h
(t)n(yp)r(e)h(whic)n(h)f(can)g(distinguish)h(in\014nit)n(y)g(from)f
(\014nite)h(in)n(teger)f(w)n(eigh)n(ts:)150 2416 y Fd(data)42
b(Cost)g(=)h(Finite)e(Weight)g(|)i(Infinity)673 2516
y(deriving)d(\()j(Eq,)g(Ord,)f(Show)g(\))150 2682 y Fg(Finally)-7
b(,)27 b(the)h(minim)n(um)g(cost)e(of)h(reac)n(hing)f(a)h(giv)n(en)f
(target)g(no)r(de)h(from)g(the)h(source)e(will)h(b)r(e)g(represen)n
(ted)f(b)n(y)150 2781 y(a)h(cost/iden)n(ti\014er)g(pair:)237
2947 y Fd(type)42 b(PathCost)e(=)k(\()f(Cost,)e(Id)i(\))150
3113 y Fg(Imp)r(ortan)n(t:)36 b(All)29 b(w)n(eigh)n(ts)d(are)h(assumed)
g(to)g(b)r(e)h(non-negativ)n(e.)150 3388 y Fe(Getting)46
b(Started)150 3570 y Fg(Load)27 b(the)h(sk)n(eleton)e(\014le...)150
3844 y Fe(What)45 b(to)h(do)251 4026 y Fg(1.)c(De\014ne)36
b(a)g(function)g Fd(edges)42 b(::)g(Graph)g(->)h(Int)34
b Fg(whic)n(h)i(returns)g(the)g(total)g(n)n(um)n(b)r(er)f(of)h(edges)f
(in)h(a)358 4126 y(giv)n(en)26 b(graph.)36 b(The)28 b(ab)r(o)n(v)n(e)e
(graph)g(has)h(13)g(edges,)g(for)g(example.)251 4292
y(2.)42 b(De\014ne)24 b(a)f(function)h Fd(weightTotal)39
b(::)k(Graph)e(->)i(Weight)21 b Fg(whic)n(h)j(returns)e(the)i(total)g
(of)f(the)h(w)n(eigh)n(ts)358 4391 y(of)35 b(eac)n(h)g(edge)g(in)h(a)g
(giv)n(en)e Fd(Graph)p Fg(.)60 b(F)-7 b(or)35 b(example,)i(when)f
(applied)g(to)f(the)h(ab)r(o)n(v)n(e)f(graph)f(it)i(should)358
4491 y(return)27 b(33.)251 4657 y(3.)42 b(De\014ne)29
b(a)f(function)i Fd(nodes)41 b(::)i(Graph)e(->)i([)g(Id)g(])29
b Fg(whic)n(h)f(will)h(return)g(the)g(list)g(of)g(no)r(de)f(iden)n
(ti\014ers)358 4757 y(in)34 b(a)f(giv)n(en)g(graph.)54
b(The)34 b(list)g(returned)g(should)f(con)n(tain)g(no)h(duplicates,)h
(so)e(when)h(applied)g(to)g(the)358 4856 y(ab)r(o)n(v)n(e)28
b(graph,)i(for)g(example,)g(it)h(should)f(return)g Fd([0,1,2,3,4,5])25
b Fg(in)30 b(some)g(order.)43 b(Hin)n(t:)g(y)n(ou)29
b(m)n(ust)358 4956 y(examine)i(b)r(oth)i(the)g(source)e(and)h(target)g
(iden)n(ti\014ers)g(of)g(eac)n(h)f(edge,)i(in)g(case)e(the)i(graph)e
(has)h(a)g(no)r(de)358 5056 y(whic)n(h)27 b(has)g(just)h(a)g(single)f
(edge)g(either)g(going)g(to)g(it)h(or)f(coming)g(from)g(it)h(\(e.g.)37
b(no)r(de)27 b(5)h(ab)r(o)n(v)n(e\).)251 5222 y(4.)42
b(De\014ne)36 b(a)g(function)h Fd(addCosts)k(::)h(Cost)g(->)h(Cost)f
(->)h(Cost)35 b Fg(that)h(will)h(add)f(t)n(w)n(o)g(v)-5
b(alues)36 b(of)g(t)n(yp)r(e)358 5321 y Fd(Cost)p Fg(.)50
b(The)33 b(rule)f(is)h(that)g(adding)f(in\014nit)n(y)h(to)g(an)n
(ything)f(yields)h(in\014nit)n(y)-7 b(,)34 b(whilst)f(adding)g(t)n(w)n
(o)f(\014nite)358 5421 y(quan)n(tities,)27 b Fc(x)h Fg(and)f
Fc(y)k Fg(sa)n(y)-7 b(,)26 b(yields)i(the)g(\014nite)g(quan)n(tit)n(y)f
Fc(x)19 b Fg(+)f Fc(y)s Fg(.)1892 5919 y(2)p eop
PStoPSsaved restore
%%Page: (2,3) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 0.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
3 2 bop 251 390 a Fg(5.)42 b(De\014ne)f(a)f(function)h
Fd(lookUp)g(::)i(Edge)f(->)h(Graph)e(->)i(Cost)c Fg(whic)n(h)h(will)h
(lo)r(ok)f(up)h(the)g(cost)f(of)g(a)358 490 y(giv)n(en)29
b(edge)i(in)f(a)h(giv)n(en)f(graph.)44 b(If)32 b(the)f(edge)f(is)g
(presen)n(t)g(in)h(the)g(graph)f(and)g(has)g(asso)r(ciated)g(w)n(eigh)n
(t)358 589 y Fd(w)35 b Fg(the)h(function)g(should)f(return)g
Fd(Finite)41 b(w)p Fg(;)e(otherwise)c(it)h(should)f(return)g
Fd(Infinity)p Fg(.)57 b(F)-7 b(or)35 b(exam-)358 689
y(ple,)26 b Fd(lookUp)42 b(\(3,4\))f(graph)25 b Fg(should)h(return)g
Fd(Finite)41 b(2)26 b Fg(and)g Fd(lookUp)41 b(\(4,1\))h(graph)24
b Fg(should)j(return)358 789 y Fd(Infinity)p Fg(.)251
955 y(6.)42 b(De\014ne)26 b(a)f(function)i Fd(remove)41
b(::)i(Eq)f(a)i(=>)e(a)i(->)e([)i(a)f(])g(->)g([)g(a)g(])26
b Fg(that)g(giv)n(en)f(an)g(item)i(and)e(a)h(list)358
1054 y(of)h(items)g(returns)f(the)i(list)f(with)h(the)f(item)h(remo)n
(v)n(ed.)35 b(Y)-7 b(ou)27 b(ma)n(y)g(assume)f(the)i(precondition)e
(that)i(the)358 1154 y(list)h(con)n(tains)f(exactly)g(one)h(o)r
(ccurrence)f(of)h(the)g(item)h(so)e(y)n(ou)g(ma)n(y)h(optionally)f
(omit)h(the)g(case)g(where)358 1254 y(the)f(list)f(is)h(empt)n(y)-7
b(.)251 1420 y(7.)42 b(\(Dijkstra's)29 b(algorithm\))f(De\014ne)i(a)f
(function)h Fd(allPaths)40 b(::)j(Graph)e(->)i([)g(PathCost)e(])29
b Fg(whic)n(h)g(will)358 1519 y(return)d(a)g(list)h(of)g(pairs)e(eac)n
(h)h(of)h(the)g(form)f Fd(\(c,i\))f Fg(where)h Fd(i)g
Fg(is)h(a)f(no)r(de)h(iden)n(ti\014er)f(and)h Fd(c)f
Fg(is)h(the)g(cost)f(of)358 1619 y(taking)21 b(the)i(shortest)e(path)h
(from)g(no)r(de)g(0)g(to)g(no)r(de)g Fd(i)p Fg(.)35 b(F)-7
b(or)22 b(the)g(ab)r(o)n(v)n(e)f(graph)g(the)i(list)f(should)g
(comprise)358 1719 y(the)30 b(elemen)n(ts)g Fd(\(Finite)41
b(3,0\))p Fg(,)29 b Fd(\(Finite)40 b(1,1\))p Fg(,)29
b Fd(\(Finite)41 b(2,2\))p Fg(,)29 b Fd(\(Finite)41 b(3,3\))p
Fg(,)29 b Fd(\(Finite)41 b(5,4\))358 1818 y Fg(and)26
b Fd(\(Infinity,5\))21 b Fg(in)27 b(some)e(order.)35
b(As)27 b(an)f(example,)g(the)h(shortest)e(path)h(from)g(0)g(to)g(4)g
(is)g(obtained)358 1918 y(b)n(y)f(tra)n(v)n(ersing)e(the)k(path)f
(0-1-2-3-4,)c(with)27 b(cost)e(5,)h(in)g(preference)f(to)h(the)g
(direct)g(route)f(0-4)g(whic)n(h)h(has)358 2017 y(cost)h(6.)150
2250 y Fb(Dijkstra's)37 b(Algorithm)150 2403 y Fg(The)d
Fd(allPaths)d Fg(function)k(should)f(b)r(egin)g(b)n(y)g(using)g(the)g
Fd(loopkUp)e Fg(and)i Fd(nodes)e Fg(functions)i(to)g(build)h(a)f(list)
150 2503 y(con)n(taining)28 b(the)h(cost)f(of)g(mo)n(ving)g(from)g(no)r
(de)h(0)f(to)h(ev)n(ery)e(other)h(no)r(de)h(\(including)g(0)f(itself)6
b(\))30 b(b)n(y)f(taking)f Ff(one)150 2602 y Fg(step)33
b(\(i.e.)52 b(b)n(y)32 b(tra)n(v)n(ersing)e(one)i(edge\).)52
b(If)33 b(a)f(no)r(de)g(can't)h(b)r(e)g(reac)n(hed)e(from)h(no)r(de)h
(0)f(in)h(one)f(step)h(the)g(cost)150 2702 y(should)27
b(b)r(e)h(mark)n(ed)f(as)g Fd(Infinity)p Fg(.)33 b(This)28
b(initial)g(list)g(has)f(t)n(yp)r(e)g Fd([)44 b(PathCost)c(])p
Fg(.)275 2802 y(Y)-7 b(ou)27 b(no)n(w)f(need)h(a)g(help)r(er)g
(function)g(\()p Ff(don)-8 b('t)28 b Fg(call)f(it)g(`help)r(er')g(-)g
(giv)n(e)f(it)h(a)g(meaningful)g(name!\))37 b(whic)n(h)27
b(will)150 2901 y(tak)n(e)32 b(this)i(initial)f(list)g(and)g(generate)f
(from)h(it)g(the)h(required)e(solution.)52 b(Assuming)33
b(the)h(help)r(er)f(function's)150 3001 y(argumen)n(t)27
b(is)g(called)g Fd(ps)p Fg(,)g(sa)n(y)-7 b(,)27 b(it)h(do)r(es)f(the)h
(follo)n(wing:)251 3167 y(1.)42 b(Find)f(the)g(elemen)n(t)g(of)g
Fd(ps)g Fg(with)g(the)g(smallest)g(cost)f(and)h(call)g(this)g
Fd(minp)h(=)h(\(cmin,j\))p Fg(.)74 b(Imp)r(or-)358 3267
y(tan)n(t:)46 b(b)r(ecause)32 b(of)g(the)h(w)n(a)n(y)e(in)h(whic)n(h)g
Fd(Cost)f Fg(and)h Fd(PathCost)d Fg(are)j(de\014ned,)h(the)g(ordering)e
(functions)358 3366 y Fd(>,<,>=,<=,min,m)o(ax)25 b Fg(\(and)31
b(hence)g Fd(minimum,)41 b(maximum)p Fg(\))28 b(all)j(giv)n(e)f
(sensible)h(results)g(when)g(applied)358 3466 y(to)20
b Fd(Cost)p Fg(s)g(and)h Fd(PathCost)p Fg(s.)31 b(F)-7
b(or)20 b(example)h Fd(Finite)41 b(w)i(<)g(Infinity)18
b Fg(for)j(all)f(v)-5 b(alid)21 b(\(i.e.)35 b(non-negativ)n(e\))358
3565 y Fd(w)d Fg(and)g(the)h Fd(minimum)d Fg(function)j(can)f(b)r(e)h
(used)f(to)g(\014nd)h(the)g(required)f Fd(\(c,i\))e Fg(pair)i(in)h(a)f
(giv)n(en)f(list)i(of)358 3665 y Fd(PathCost)p Fg(s)24
b(with)k(the)g(smallest)f Fd(Cost)f Fg(v)-5 b(alue.)37
b(This)27 b(part)g(is)h(therefore)f(straigh)n(tforw)n(ard!)251
3831 y(2.)42 b Fd(minp)24 b Fg(forms)h(part)h(of)g(\(i.e.)36
b(the)27 b(head)e(of)6 b(\))27 b(the)f(required)f(solution.)36
b(The)26 b(rest)f(of)h(the)h(solution)e(is)h(found)358
3931 y(b)n(y)g(applying)g(a)g Ff(r)l(elaxation)h Fg(function)g(to)g
(eac)n(h)e(of)i(the)g(elemen)n(ts)f(of)h Fd(ps)e Fg(that)i(remain)f
(when)h(that)g Fd(minp)358 4030 y Fg(is)22 b(remo)n(v)n(ed)g(\(i.e.)36
b(using)22 b(y)n(our)g Fd(remove)f Fg(function\).)36
b(The)23 b(help)r(er)g(function)h(is)e(then)i(applied)f(recursiv)n(ely)
358 4130 y(to)k(the)h(resulting)f(list.)37 b(The)28 b(pro)r(cess)e
(completes)h(when)h Fd(ps)f Fg(is)h(empt)n(y)-7 b(.)358
4263 y(The)24 b(relaxation)f(function)j(tak)n(es)d(a)i
Fd(\(c,i\))d Fg(pair)i(and)h(generates)e(a)h(new)h(pair)f
Fd(\(c',i\))e Fg(where)i Fd(c')g Fg(is)h(the)358 4362
y(minim)n(um)30 b(of)g Fd(c)f Fg(\(the)i(shortest)e(path)h(from)f(0)h
(to)g Fd(i)f Fg(so)g(far\))h(and)f(the)i(cost)e(of)h(taking)f(the)h
(alternativ)n(e)358 4462 y(route)j(from)g(0)g(to)g Fd(j)h
Fg(\(just)g(remo)n(v)n(ed\))f(and)g(then)h(a)f(single)g(edge)g(from)h
Fd(j)f Fg(to)g Fd(i)h Fg(\(if)g(one)f(exists\).)55 b(The)358
4562 y(relaxation)23 b(function)j(th)n(us)f(requires)f(a)g
Fd(lookUp)f Fg(on)i(the)g(original)f(graph)g(and)h(the)g(use)g(of)g
Fd(addCosts)d Fg(to)358 4661 y(sum)29 b(the)i(ab)r(o)n(v)n(e)d(costs.)
43 b(Note)30 b(that)g(if)g(no)g(edge)f(exists)g(b)r(et)n(w)n(een)h
Fd(j)g Fg(and)f Fd(i)h Fg(the)g(asso)r(ciated)e(edge)i(cost)358
4761 y(will)d(b)r(e)h Fd(Infinity)d Fg(and)i(the)h(original)e
Fd(\(c,i\))g Fg(pair)h(will)g(b)r(e)i(returned)e(unmo)r(di\014ed.)150
4927 y Fa(IMPOR)-8 b(T)g(ANT:)31 b(credit)h(will)e(b)s(e)g(giv)m(en)h
(for)h(the)f(appropriate)h(use)f(of)g(higher-order)g(functions)150
5027 y(and)h(list)f(comprehensions.)1892 5919 y Fg(3)p
eop
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
595.000000 421.271378 translate
90 rotate
0.706651 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
showpage
PStoPSsaved restore
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
