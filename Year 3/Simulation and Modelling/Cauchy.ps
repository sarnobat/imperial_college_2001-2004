%!PS-Adobe-2.0
%%Title: Cauchy.ps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Dec  1 15:27:59 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
966 420 M
63 0 V
5933 0 R
-63 0 V
882 420 M
( 1e-16) Rshow
966 698 M
31 0 V
5965 0 R
-31 0 V
966 977 M
63 0 V
5933 0 R
-63 0 V
882 977 M
( 1e-14) Rshow
966 1255 M
31 0 V
5965 0 R
-31 0 V
966 1533 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 1e-12) Rshow
966 1811 M
31 0 V
5965 0 R
-31 0 V
966 2090 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 1e-10) Rshow
966 2368 M
31 0 V
5965 0 R
-31 0 V
966 2646 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 1e-08) Rshow
966 2924 M
31 0 V
5965 0 R
-31 0 V
966 3203 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 1e-06) Rshow
966 3481 M
31 0 V
5965 0 R
-31 0 V
966 3759 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 0.0001) Rshow
966 4037 M
31 0 V
5965 0 R
-31 0 V
966 4316 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 0.01) Rshow
966 4594 M
31 0 V
5965 0 R
-31 0 V
966 4872 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 1) Rshow
966 420 M
0 63 V
0 4389 R
0 -63 V
966 280 M
( 0.01) Cshow
1529 420 M
0 31 V
0 4421 R
0 -31 V
2092 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1) Cshow
2655 420 M
0 31 V
0 4421 R
0 -31 V
3219 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
3782 420 M
0 31 V
0 4421 R
0 -31 V
4345 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
4908 420 M
0 31 V
0 4421 R
0 -31 V
5471 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1e+06) Cshow
6034 420 M
0 31 V
0 4421 R
0 -31 V
6598 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1e+08) Cshow
1.000 UL
LTb
966 420 M
5996 0 V
0 4452 V
-5996 0 V
966 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(f\(x\)) Cshow
grestore
3964 70 M
(Request Size \(bytes\)) Cshow
1.000 UL
LT0
6311 4739 M
(2/pi*2382.88313/\(2382.88313*2382.88313+x*x\)) Rshow
6395 4739 M
399 0 V
966 3878 M
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
60 0 V
61 0 V
60 -1 V
61 0 V
61 0 V
60 -1 V
61 -1 V
60 -1 V
61 -2 V
60 -4 V
61 -6 V
61 -9 V
60 -13 V
61 -20 V
60 -26 V
61 -34 V
60 -40 V
61 -47 V
61 -50 V
60 -54 V
61 -56 V
60 -58 V
61 -58 V
60 -59 V
61 -60 V
61 -59 V
60 -60 V
61 -60 V
60 -59 V
61 -60 V
60 -60 V
61 -60 V
60 -60 V
61 -60 V
61 -59 V
60 -60 V
61 -60 V
60 -60 V
61 -60 V
60 -60 V
61 -59 V
61 -60 V
60 -60 V
61 -60 V
60 -60 V
61 -60 V
60 -60 V
61 -59 V
61 -60 V
60 -60 V
61 -60 V
60 -60 V
61 -60 V
60 -59 V
61 -60 V
60 -60 V
61 -60 V
61 -60 V
60 -60 V
61 -60 V
60 -59 V
61 -60 V
60 -60 V
61 -60 V
1.000 UP
1.000 UL
LT1
6311 4599 M
("data2.dat") Rshow
1971 4499 Pls
2264 3673 Pls
2361 3492 Pls
2507 3793 Pls
2605 3588 Pls
2654 3626 Pls
2702 3786 Pls
2751 3599 Pls
2800 3617 Pls
2848 3600 Pls
2897 3611 Pls
2946 3772 Pls
2994 3672 Pls
3043 3701 Pls
3092 3732 Pls
3141 3905 Pls
3189 3913 Pls
3238 3916 Pls
3287 3924 Pls
3335 3906 Pls
3384 3867 Pls
3433 3882 Pls
3481 4020 Pls
3530 4122 Pls
3579 3816 Pls
3627 3775 Pls
3676 3827 Pls
3725 3992 Pls
3774 3928 Pls
3822 3850 Pls
3871 3776 Pls
3920 3745 Pls
3968 3715 Pls
4017 3698 Pls
4066 3646 Pls
4114 3640 Pls
4163 3621 Pls
4212 3569 Pls
4261 3586 Pls
4309 3530 Pls
4358 3463 Pls
4407 3415 Pls
4455 3414 Pls
4504 3328 Pls
4553 3270 Pls
4601 3215 Pls
4650 3188 Pls
4699 3146 Pls
4748 3123 Pls
4796 3081 Pls
4845 2993 Pls
4894 2935 Pls
4942 2878 Pls
4991 2816 Pls
5040 2756 Pls
5088 2737 Pls
5137 2803 Pls
5186 2551 Pls
5234 2466 Pls
5283 2367 Pls
5332 2373 Pls
5381 2216 Pls
5429 2295 Pls
5478 2252 Pls
5527 2122 Pls
5575 2214 Pls
5624 2074 Pls
5673 1939 Pls
5770 1940 Pls
5819 1916 Pls
5868 2038 Pls
5916 1735 Pls
6208 1826 Pls
6257 1567 Pls
6355 1602 Pls
6403 1578 Pls
6452 1554 Pls
6501 1579 Pls
6549 1555 Pls
6598 1398 Pls
6647 1458 Pls
6744 1326 Pls
6594 4599 Pls
stroke
grestore
end
showpage
