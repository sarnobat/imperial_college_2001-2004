head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2003.11.08.02.29.01;	author qq01;	state dead;
branches;
next	1.2;

1.2
date	2003.11.04.23.06.49;	author ajb101;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.31.14.34.33;	author qq01;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@/*
 * Created on 2003-10-31
 *
 * To change the template for this generated file go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments
 */
package parser;


import java.io.DataInputStream;
import antlr.*;

/**
 * @@author ajiao
 *
 * To change the template for this generated type comment go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments
 */
public class ParserTester {

	public static void main(String[] args) {
		DataInputStream input = new DataInputStream(System.in);

		  // attach lexer to the input stream
		  WhateverLexer lexer = new WhateverLexer(input);

		  // Create parser attached to lexer
		  WhateverParser parser = new WhateverParser(lexer);

		  // start up the parser by calling the rule
		  // at which you want to begin parsing.
		  parser.goal();
		  
		  AST tree = parser.getAST();
		  
		  System.out.println(tree.toString());

	}
}
@


1.2
log
@adding assembler calls to YAMS.java
@
text
@@


1.1
log
@*** empty log message ***
@
text
@a10 1
import parser.*;
@

