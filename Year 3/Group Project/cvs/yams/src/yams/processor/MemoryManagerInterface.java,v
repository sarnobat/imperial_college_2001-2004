head	1.10;
access;
symbols
	yams-final-19-12-03:1.10
	yams-release2-17-12-03:1.10
	yams-release-17-12-03:1.10;
locks; strict;
comment	@# @;


1.10
date	2003.12.17.13.38.28;	author sw00;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.16.16.16.42;	author bmc01;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.15.21.37.05;	author sw00;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.04.17.12.59;	author bmc01;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.02.14.34.18;	author sw00;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.01.15.28.06;	author bmc01;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.23.21.43.01;	author sw00;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.14.14.55.16;	author ajb101;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.14.14.35.42;	author bmc01;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.10.10.57.50;	author qq01;	state Exp;
branches;
next	;


desc
@@


1.10
log
@fixed javadoc error
@
text
@/*
 * Created on 26-Oct-2003
 *
 */
package yams.processor;
import java.io.PrintStream;

public interface MemoryManagerInterface {

	/**
	 * Sets a given address to given value
	 * @@param addr Memory word address
	 * @@param val Value to be set
	 * @@return success
	 */
	public boolean setLocation(int addr, int val);

	/**
	 * Returns to value of a given address
	 * @@param addr Memory word address to get
	 * @@return Value at the memory address
	 */
	public int getLocation(int addr);

	/**
	 * Sets the byte at a given address to given value
	 * @@param addr Address of memory byte
	 * @@param val Value to store
	 * @@return success
	 */
	public boolean setByte(int addr, int val);

	/**
	 * Returns the byte at a given address
	 * @@param addr Memory byte requested
	 * @@return Value at that memory address
	 */
	public int getByte(int addr);
	
	/**
	 * Resets the memory to 0
	 */
	public void reset();
	
	/**
	 * Returns the number of words in memory
	 * @@return number of words in memory
	 */
	public int memoryUsed();
	
	/**
	 * Sets the verbose PrintStream
	 * @@param verbose Address of printstream for verbose mode
	 */
	public void setVerbose(PrintStream verbose);

}
@


1.9
log
@*** empty log message ***
@
text
@d14 1
a14 1
	 * @@return
d29 1
a29 1
	 * @@return
d47 1
a47 1
	 * @@return
@


1.8
log
@added setVerbose(PrintStream)
@
text
@d10 6
a15 1
	/* Sets a given address to given value */
d18 5
a22 1
	/* Returns to value of a given address */
d25 6
a30 1
	/* Sets the byte at a given address to given value */
d33 5
a37 1
	/* Returns the byte at a given address */
d40 3
a42 1
	/* Resets the memory to 0 */
d45 4
a48 1
	/* Returns the number of words in memory */
d51 4
a54 1
	/* Sets the verbose PrintStream */
@


1.7
log
@*** empty log message ***
@
text
@d6 1
d28 2
a29 1
	
@


1.6
log
@added memoryUsed method
@
text
@d26 2
@


1.5
log
@*** empty log message ***
@
text
@d23 3
@


1.4
log
@added getByte and setByte
@
text
@d20 3
@


1.3
log
@*** empty log message ***
@
text
@d1 21
a21 15
/*
 * Created on 26-Oct-2003
 *
 */
package yams.processor;

public interface MemoryManagerInterface {

	/* Sets a given address to given value */
	public boolean setLocation(int addr, int val);

	/* Returns to value of a given address */
	public int getLocation(int addr);

}
@


1.2
log
@*** empty log message ***
@
text
@d5 1
a5 1
package processor;
@


1.1
log
@Updated package structure.
@
text
@d1 15
a15 14
package yams.processor;

public interface MemoryManagerInterface {

//	public MemoryManagerInterface(
//		int reserved_segment_size,
//		int text_segment_size,
//		int maximum_memory_size);

	public void setLocation(int addr, int val);

	public int getLocation(int addr);

}
@

