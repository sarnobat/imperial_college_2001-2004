head	1.14;
access;
symbols
	yams-final-19-12-03:1.14
	yams-release2-17-12-03:1.14
	yams-release-17-12-03:1.14;
locks; strict;
comment	@# @;


1.14
date	2003.12.16.02.07.03;	author ajb101;	state Exp;
branches;
next	1.13;

1.13
date	2003.12.15.15.43.51;	author ajb101;	state Exp;
branches;
next	1.12;

1.12
date	2003.12.15.10.07.59;	author ss401;	state Exp;
branches;
next	1.11;

1.11
date	2003.12.14.19.10.35;	author ss401;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.11.20.18.14;	author ajb101;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.11.03.17.02;	author ajb101;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.10.17.03.57;	author ajb101;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.10.03.02.45;	author ajb101;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.09.21.03.12;	author ajb101;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.09.21.00.21;	author ajb101;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.08.19.44.14;	author ajb101;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.04.02.48.12;	author ajb101;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.03.13.51.14;	author ajb101;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.02.14.47.15;	author ajb101;	state Exp;
branches;
next	;


desc
@@


1.14
log
@*** empty log message ***
@
text
@/*
 * Created on 21-Nov-2003
 *
 */
package yams.GUI;

import javax.swing.*;

import yams.*;
import yams.GUI.hexTable.*;
import yams.processor.*;

/**
 * Panel showing the data segment in main memory for a program
 */
public class DataPanel extends YamsPanel {
	
	// window elements
	JHexEdit dataTable;
	
	public DataPanel(YAMSGui c) {
		super(c);
		setTitle("Data Segment");
		
		// initialization must happen after processor has been created
	}
	
	/**
	 * Creates a new Hex data table representing the
	 * data segment of a program
	 *
	 */
	public void init() {
		setLayout(new BoxLayout(this, BoxLayout.LINE_AXIS));
		
		dataTable = new JHexEdit(new dataInterface(0x10000000));
		
		this.add(dataTable);
	}
	
	/**
	 * Updates the cells in the data table corresponding to the address given
	 * @@param address to update
	 */
	public void memoryChanged(int address) {
		// convert address to a row and column
		// offset: 0x100000
		// columns: 16
		if (address >= 0x10000000) {
			int col = (address - 0x10000000) % 16;
			int row = (address - 0x10000000) / 16;
			dataTable.dataChanged(row, col+1);
			dataTable.dataChanged(row, col+2);
			dataTable.dataChanged(row, col+3);
			dataTable.dataChanged(row, col+4);
		}
	}
	
	/**
	 * Clears all values in the Data segment table
	 */
	public void reset() {
		// reset panel
		try {
			this.remove(dataTable);
		}
		catch (Exception e) {}
		dataTable = new JHexEdit(new dataInterface(0x10000000));
		this.add(dataTable);
	}
	
	
	/**
	 * The HexData class where the table gets it's data from
	 */
	class dataInterface implements HexData {
		
		int startOffset;
		Processor processor;
		
		dataInterface(int s) {
			startOffset = s;
			processor = controller.getProcessor();
		}
		
		public int getRowCount() {
			// fixed row count
			return 100;
		}
		
		public int getColumnCount() {
			// fixed column count
			return 16;
		}
		
		public int getLastRowSize() {
			// for some reason this needs to be 17 rather than 16
			return 17;
		}
		
		public byte getByte(int row, int col) {
			// get the byte from the memory manager and return it
			return (byte)processor.memoryManager.getByte(startOffset + (row*getColumnCount() + col));
		}
		
		public void setByte(int row, int col, byte value) {
			// no editing of memory values in this version
		}
		
		public byte[] getRow(int row) {
			byte[] ret = new byte[16];
			
			for(int i=0; i<16; i++) {
				ret[i] = getByte(row, i);
			}
			
			return ret;
		}
		
	}

}
@


1.13
log
@*** empty log message ***
@
text
@d21 1
a21 1
	public DataPanel(String windowName, YAMSGui c) {
@


1.12
log
@*** empty log message ***
@
text
@a13 2
 * 
 * @@author ss401
d41 4
d74 1
a74 3
	 * 
	 * @@author ss401
	 * The hex data structure with the appropriate dimensions specified
d87 1
d92 1
d97 1
d102 1
d107 1
@


1.11
log
@*** empty log message ***
@
text
@d30 5
d57 3
d71 5
@


1.10
log
@*** empty log message ***
@
text
@a3 2
 * To change the template for this generated file go to
 * Window - Preferences - Java - Code Generation - Code and Comments
d13 5
a17 1

@


1.9
log
@*** empty log message ***
@
text
@a39 1
		System.out.println("  MEMORY CHANGING!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
a46 1
			System.out.println("Address: " + address + " Row: " + row + " Column: " + col);
@


1.8
log
@finished layout of gui? :)
@
text
@d37 23
a59 10
//		// convert address to a row and column
//		// offset: 0x100000
//		// columns: 16
//		System.out.println("  MEMORY CHANGING!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
//		int col = (address - 0x10000000) % 16;
//		int row = (address - 0x10000000) / 16;
//		dataTable.dataChanged(row, col);
//		dataTable.dataChanged(row, col+1);
//		dataTable.dataChanged(row, col+2);
//		dataTable.dataChanged(row, col+3);
@


1.7
log
@yet more work on gui - including addition of a HexTable
@
text
@d61 1
a61 1
			return 10;
@


1.6
log
@moved HexTable files into package
@
text
@d12 1
a12 1
import yams.GUI.HexTable.*;
@


1.5
log
@updated data panel
@
text
@d12 1
@


1.4
log
@*** empty log message ***
@
text
@a8 2
import java.awt.*;

d12 1
a14 3

// TODO: THIS!

d16 6
a21 3

	public DataPanel(String windowName, YAMSGui controller) {
		super(controller);
d24 63
a86 1
		JLabel l = new JLabel("I don't have a clue what to put here");
a87 3
		//getContentPane().setLayout(new BoxLayout(getContentPane(),BoxLayout.Y_AXIS));
		this.add(l);

@


1.3
log
@lots of gooey updates
@
text
@d16 3
a18 4
/**
 * @@author ss401
 *
 */
a20 3
	/**
	 * 
	 */
@


1.2
log
@*** empty log message ***
@
text
@d9 1
a9 1
import java.awt.Dimension;
d11 1
a11 3
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JTextArea;
d14 1
a14 1
import yams.processor.*;
d26 2
a27 2
		super(windowName, controller);
//		setTitle("Data Segment");
@


1.1
log
@*** empty log message ***
@
text
@d27 2
a28 2
	public DataPanel(int width, int height, YAMSGui controller) {
		super(width, height, controller);
@

