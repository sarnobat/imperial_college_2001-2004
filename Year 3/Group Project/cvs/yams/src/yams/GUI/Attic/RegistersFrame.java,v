head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2003.12.02.14.42.54;	author ajb101;	state dead;
branches;
next	1.6;

1.6
date	2003.11.30.17.17.38;	author ajb101;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.29.20.12.27;	author ajb101;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.29.18.43.32;	author ss401;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.23.20.54.27;	author ajb101;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.23.15.47.46;	author ss401;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.21.17.55.58;	author ss401;	state Exp;
branches;
next	;


desc
@@


1.7
log
@*** empty log message ***
@
text
@/*
 * Created on 21-Nov-2003
 *
 * To change the template for this generated file go to
 * Window - Preferences - Java - Code Generation - Code and Comments
 */
package yams.GUI;

import java.awt.FlowLayout;
import java.awt.GridLayout;

import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

import yams.*;
import yams.processor.*;

/**
 * @@author ss401
 *
 */
public class RegistersFrame extends YamsInternalFrame {

	/**
	 * 
	 */
	public RegistersFrame(int width, int height, YAMSGui controller) {
		super(width, height, controller);
		setTitle("Register Contents");

		getContentPane().setLayout(new FlowLayout());

		//TODO: At the moment, 2 sub-panels are required to enforce 2 columns
		//that are read down THEN across (as opposed to page-wise of across then
		//down). What is needed is a 'vertical' flow layout, but there doesn't appear
		//to be one.
		JPanel left = new JPanel();
		JPanel right = new JPanel();

		left.setVisible(true);
		right.setVisible(true);

		left.setLayout(new GridLayout(0, 2));

		getContentPane().add(left);
		getContentPane().add(right);

		left.setLayout(new GridLayout(0,2));
		for (int i = 0; i < 5; i++) {

			JLabel registerName = new JLabel("Register " + i + " ");
			JTextField b = new JTextField("0x11111");
			b.setVisible(true);
			b.setEditable(false);
			registerName.setVisible(true);
			left.add(registerName);
			left.add(b);
		}
		//right.setLayout(new BoxLayout(right, BoxLayout.Y_AXIS));
		right.setLayout(new GridLayout(0,2));
		for (int i = 0; i < 5; i++) {

			JLabel registerName1 = new JLabel("Register " + i+" ");
			JTextField b1 = new JTextField("0x0000");
			b1.setEditable(false);
			b1.setVisible(true);
			registerName1.setVisible(true);
			right.add(registerName1);
			right.add(b1);
		}

		//TODO: To find out what the actual registers are, you can use the 'ValidRegisters' class

	}

}
@


1.6
log
@passed controller to each frame instead of processor, and updated the console version
@
text
@@


1.5
log
@added passing a reference to the processor to each internal frame, and added buttons to the file list
@
text
@d17 1
d29 2
a30 2
	public RegistersFrame(int width, int height, Processor processor) {
		super(width, height, processor);
@


1.4
log
@Added progress marker to Program Code frame; added event handler for Execution control
@
text
@d17 2
d28 2
a29 2
	public RegistersFrame(int width, int height) {
		super(width, height);
@


1.3
log
@fixed packages
@
text
@d50 1
a50 1
			JLabel registerName = new JLabel("Register" + i);
d53 1
a54 1

d62 1
a62 1
			JLabel registerName1 = new JLabel("Register" + i);
d64 1
@


1.2
log
@Added several components to internal frames
@
text
@d7 1
a7 1
package yams.src.yams.GUI;
@


1.1
log
@created new classes for each internal window
@
text
@d9 2
d12 4
d22 1
a22 1
	
d26 2
a27 2
	public RegistersFrame(int width,int height) {
		super(width,height);
d29 43
@

