head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2003.12.08.12.42.53;	author qq01;	state dead;
branches;
next	1.2;

1.2
date	2003.11.15.03.40.00;	author qq01;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.14.16.51.34;	author ss401;	state Exp;
branches;
next	;


desc
@@


1.3
log
@deleted deprecated classes
@
text
@package yams.parser;

import java.io.FileReader;
import java.io.FileWriter;

import javax.xml.transform.TransformerFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.stream.StreamSource;
import javax.xml.transform.stream.StreamResult;

public class MIPSTransform {
	private static TransformerFactory tf = null;

	public static void main(String[] args) throws Exception {
		//arguments: xml file, xsl file, output file
		if (args.length != 3) {
			System.out.println("Invocation must be of the form: java MIPSTransform XML XSL OUT");
			System.exit(-1);
		}
		else {
			tf = TransformerFactory.newInstance();

			StreamSource xml = new StreamSource(new FileReader(args[0]));
			StreamSource xsl = new StreamSource(new FileReader(args[1]));
			StreamResult output = new StreamResult(new FileWriter(args[2]));

			Transformer t = null;
			try {
				t = tf.newTransformer(xsl);
			}
			catch (Exception e) {
				System.out.println("Couldn't initialize transformer:  " +e);
				System.exit(-1);
			}
			t.transform(xml, output);
		}
	}
}
@


1.2
log
@*** empty log message ***
@
text
@@


1.1
log
@Added XSLT parser files
@
text
@d1 2
a5 1
import javax.xml.transform.TransformerConfigurationException;
@

