head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.11.10.10.57.50;	author qq01;	state dead;
branches;
next	1.1;

1.1
date	2003.11.04.19.38.46;	author jkm01;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Updated package structure.
@
text
@package assembler;

import java.util.TreeMap;

/*
 * Created on 04-Nov-2003
 *
 * To change the template for this generated file go to
 * Window - Preferences - Java - Code Generation - Code and Comments
 */

/**
 * @@author jkm01
 *
 * To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Generation - Code and Comments
 */
public class SymbolTable {
	
	private TreeMap table;
	
	// this class will hold addresses of memory locations assigned to a label
	
	public SymbolTable()
	{
		table = new TreeMap();
	}
	
	public boolean containsLabel(String label) {return table.containsKey(label);}
	public boolean containsAddress(int address) {return table.containsValue(new Integer(address));}
	public int returnAddress(String label) {return ((Integer)table.get(label)).intValue();}
	public void add(String label, int address)
	{
		if (!containsLabel(label))
			{
				if (!containsAddress(address))
					{
						table.put(label,new Integer(address));
					}
				else
					{
						System.out.println("Error current address already assembled to");
					}
			}
		else
			{
				System.out.println("Error current label already used within assembler");
			}			
	}
}@


1.1
log
@Updated the Assembler.java file as well as adding 6 other related classes

James
@
text
@@

