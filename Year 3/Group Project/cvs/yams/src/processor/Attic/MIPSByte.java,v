head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2003.11.10.10.57.52;	author qq01;	state dead;
branches;
next	1.4;

1.4
date	2003.11.09.23.09.55;	author sw00;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.06.13.52.35;	author sw00;	state Exp;
branches;
next	1.2;

1.2
date	2003.10.31.14.47.26;	author qq01;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.30.20.49.28;	author sw00;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Updated package structure.
@
text
@/*
 * Created on 30-Oct-2003
 *
 */
package processor;
import exceptions.YAMSIllegalArgumentException;

/**
 * @@author sw00
 *
 */
public class MIPSByte {

	public static final int SIZE = 8;
	private MIPSBitstring bitstring;

	public MIPSByte() {
		bitstring = new MIPSBitstring(SIZE);
	}

	public MIPSByte(int value) {
		this();
		// negative checking omitted
		set(value);
	}

	public int get() {
		return bitstring.toInt();
	}

	public void set(int value) {
		// negative checking omitted
		for(int i = 0; i < SIZE; i++) {
			bitstring.setBit(i, (value >> i) & 1);
		}
	}	
			
	public int getBit(int bitnumber) {
		if((bitnumber < 0) || (bitnumber > SIZE - 1)) {
			// 0 .. SIZE - 1 are only permissible values for 'bitnumber'
			throw new YAMSIllegalArgumentException("bitnumber out of range");
		}
		return bitstring.getBit(bitnumber); 
	}
	
	public void setBit(int bitnumber, int value) {
		if((bitnumber < 0) || (bitnumber > SIZE - 1)) {
			// 0 .. SIZE - 1 are only permissible values for 'bitnumber'
			throw new YAMSIllegalArgumentException("bitnumber out of range");
		}
		if((value < 0) || (value > 1)) {
			// 0 or 1 are only permissible values for 'value'
			throw new YAMSIllegalArgumentException("value out of range");
		}
		bitstring.setBit(bitnumber, value);				
	}

	public String toString() {
		return bitstring.toString();
	}

}
@


1.4
log
@throws runtime exceptions
@
text
@@


1.3
log
@changed to bitstring wrapper
@
text
@d6 1
d9 1
a9 1
 * @@author sw00 Simon West
d40 2
a41 2
			// TODO - throw an exception here, maybe YAMSIllegalArgumentException
			// since 0 .. SIZE - 1 are only permissible values for 'bitnumber'
d48 2
a49 2
			// TODO - throw an exception here, maybe YAMSIllegalArgumentException
			// since 0 .. SIZE - 1 are only permissible values for 'bitnumber'
d52 2
a53 2
			// TODO - throw an exception here, maybe YAMSIllegalArgumentException
			// since 0 or 1 are only permissible values for 'value'
@


1.2
log
@fixed package typo
@
text
@d7 12
a18 1
public class MIPSByte extends MIPSWord {
d21 38
a58 2
		super(value);
		// TODO - Byte handling
@


1.1
log
@some processor interfaces and MIPS word class, added by Simon
@
text
@d5 1
a5 1
package src.processor;
@

