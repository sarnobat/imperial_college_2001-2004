head	1.4;
access;
symbols
	yams-final-19-12-03:1.4
	yams-release2-17-12-03:1.3
	yams-release-17-12-03:1.3
	javadoc-13-12-2003:1.2;
locks; strict;
comment	@# @;


1.4
date	2003.12.19.14.20.25;	author qq01;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.17.15.06.01;	author qq01;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.13.20.07.25;	author qq01;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.13.20.00.55;	author qq01;	state Exp;
branches;
next	;


desc
@@


1.4
log
@updated javadoc
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.4.2_03) on Fri Dec 19 14:18:24 GMT 2003 -->
<TITLE>
Uses of Class yams.assembler.AssemblerException
</TITLE>


<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="Uses of Class yams.assembler.AssemblerException";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../yams/assembler/AssemblerException.html" title="class in yams.assembler"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="AssemblerException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<CENTER>
<H2>
<B>Uses of Class<br>yams.assembler.AssemblerException</B></H2>
</CENTER>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Packages that use <A HREF="../../../yams/assembler/AssemblerException.html" title="class in yams.assembler">AssemblerException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><A HREF="#yams.assembler"><B>yams.assembler</B></A></TD>
<TD>&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<P>
<A NAME="yams.assembler"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
Uses of <A HREF="../../../yams/assembler/AssemblerException.html" title="class in yams.assembler">AssemblerException</A> in <A HREF="../../../yams/assembler/package-summary.html">yams.assembler</A></FONT></TD>
</TR>
</TABLE>
&nbsp;
<P>

<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
<TD COLSPAN=2>Methods in <A HREF="../../../yams/assembler/package-summary.html">yams.assembler</A> that throw <A HREF="../../../yams/assembler/AssemblerException.html" title="class in yams.assembler">AssemblerException</A></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../yams/assembler/ToBeDoneTable.ToBeDoneRow.html" title="class in yams.assembler">ToBeDoneTable.ToBeDoneRow</A></CODE></FONT></TD>
<TD><CODE><B>ToBeDoneTable.</B><B><A HREF="../../../yams/assembler/ToBeDoneTable.html#get(int)">get</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a ToBeDoneRow object (see ToBeDoneRow structure) when a given index line is given. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>SymbolTable.</B><B><A HREF="../../../yams/assembler/SymbolTable.html#add(java.lang.String, int, int)">add</A></B>(java.lang.String&nbsp;label,
    int&nbsp;address,
    int&nbsp;lineNumber)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given label, to a given address (ie adds a mapping of label -> address within the TreeMap, throwing an
 exception when that symbol / address is already existing within the SysmbolTable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>OperandHandler.</B><B><A HREF="../../../yams/assembler/OperandHandler.html#reCalculateOperandValues()">reCalculateOperandValues</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Recalculates the values of the operand list within the class, adding them to the translateList structure.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>OperandHandler.</B><B><A HREF="../../../yams/assembler/OperandHandler.html#encodeWord(java.lang.String, int, yams.assembler.Representation, java.util.List, java.lang.String, int, yams.parser.Instruction)">encodeWord</A></B>(java.lang.String&nbsp;word,
           int&nbsp;address,
           <A HREF="../../../yams/assembler/Representation.html" title="class in yams.assembler">Representation</A>&nbsp;representation,
           java.util.List&nbsp;opList,
           java.lang.String&nbsp;operandsCoding,
           int&nbsp;line,
           <A HREF="../../../yams/parser/Instruction.html" title="class in yams.parser">Instruction</A>&nbsp;current)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>
 INPUT:	
 <BR><BR>
 Receives a combination of operands (see below).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>OperandHandler.</B><B><A HREF="../../../yams/assembler/OperandHandler.html#handleOperand(yams.parser.Operand)">handleOperand</A></B>(<A HREF="../../../yams/parser/Operand.html" title="class in yams.parser">Operand</A>&nbsp;currentOperand)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Distinguishes between four main types of operand (from parser point-of-view): Registers / Immediates / Labels / Addresses
 <BR><BR>Passes on Operand to other handlers to deal with appropriately.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>OperandHandler.</B><B><A HREF="../../../yams/assembler/OperandHandler.html#intToBinaryString(int, int)">intToBinaryString</A></B>(int&nbsp;immediate,
                  int&nbsp;numberOfBitsRequired)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method transforms a decimal immediate into twos complement binary with accuracy definted by the numberOfBitsRequired parameter.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>OperandHandler.</B><B><A HREF="../../../yams/assembler/OperandHandler.html#toTwosComplement(java.lang.String)">toTwosComplement</A></B>(java.lang.String&nbsp;positiveBinaryNumber)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Method used in translating an immediate to binary to convert any bitstring given into twos complement.
 </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B>OperandHandler.</B><B><A HREF="../../../yams/assembler/OperandHandler.html#binaryStringToInteger(java.lang.String)">binaryStringToInteger</A></B>(java.lang.String&nbsp;binaryString)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts any binary string to its integer value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;char</CODE></FONT></TD>
<TD><CODE><B>OperandHandler.</B><B><A HREF="../../../yams/assembler/OperandHandler.html#getOperandCode(yams.parser.Operand)">getOperandCode</A></B>(<A HREF="../../../yams/parser/Operand.html" title="class in yams.parser">Operand</A>&nbsp;op)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>OperandHandler.</B><B><A HREF="../../../yams/assembler/OperandHandler.html#encodeOperandList(java.util.List)">encodeOperandList</A></B>(java.util.List&nbsp;anOperandList)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../yams/assembler/Representation.html" title="class in yams.assembler">Representation</A></CODE></FONT></TD>
<TD><CODE><B>InstructionTableRow.</B><B><A HREF="../../../yams/assembler/InstructionTableRow.html#getRepresentation(java.lang.String)">getRepresentation</A></B>(java.lang.String&nbsp;operandEncoding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>InstructionTable.</B><B><A HREF="../../../yams/assembler/InstructionTable.html#addInstruction(java.lang.String, yams.assembler.InstructionTableRow)">addInstruction</A></B>(java.lang.String&nbsp;instructionName,
               <A HREF="../../../yams/assembler/InstructionTableRow.html" title="class in yams.assembler">InstructionTableRow</A>&nbsp;r)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a new instruction to the InstructionTable, requiring the new instruction name as well as a precreated InstructionTableRow structure.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../yams/assembler/InstructionTableRow.html" title="class in yams.assembler">InstructionTableRow</A></CODE></FONT></TD>
<TD><CODE><B>InstructionTable.</B><B><A HREF="../../../yams/assembler/InstructionTable.html#getInstruction(java.lang.String, int, yams.parser.Instruction)">getInstruction</A></B>(java.lang.String&nbsp;instructionName,
               int&nbsp;line,
               <A HREF="../../../yams/parser/Instruction.html" title="class in yams.parser">Instruction</A>&nbsp;currentInstruction)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the InstructionTableTow entry within the InstructionTable for the give instruction name string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>InstructionTable.</B><B><A HREF="../../../yams/assembler/InstructionTable.html#getMonatomicInstruction(java.lang.String, int, yams.parser.Instruction)">getMonatomicInstruction</A></B>(java.lang.String&nbsp;machineCode,
                        int&nbsp;line,
                        <A HREF="../../../yams/parser/Instruction.html" title="class in yams.parser">Instruction</A>&nbsp;currentInstruction)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieves the corresponding instruction name of a given machine code representation. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>GuiMap.</B><B><A HREF="../../../yams/assembler/GuiMap.html#add(int, int, yams.parser.Instruction)">add</A></B>(int&nbsp;line,
    int&nbsp;address,
    <A HREF="../../../yams/parser/Instruction.html" title="class in yams.parser">Instruction</A>&nbsp;currentInstruction)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allows a line number within the MIPS code to be added to the GUIMap with a given address, and thus instantiates
 the mapping within the TreeMap table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B>Assembler.</B><B><A HREF="../../../yams/assembler/Assembler.html#assembleCode(yams.parser.LineList)">assembleCode</A></B>(<A HREF="../../../yams/parser/LineList.html" title="class in yams.parser">LineList</A>&nbsp;code)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The assembleCode() method receives a LineList (AST) from the parser containing the MIPS code for
 the required file. </TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B>Assembler.</B><B><A HREF="../../../yams/assembler/Assembler.html#numberOfWordsWithinWordString(java.lang.String, int, yams.parser.Instruction)">numberOfWordsWithinWordString</A></B>(java.lang.String&nbsp;wordString,
                              int&nbsp;lineNumber,
                              <A HREF="../../../yams/parser/Instruction.html" title="class in yams.parser">Instruction</A>&nbsp;currentInstruction)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of 32 bit words within a given word string, throwing an exception if the string is not
 in multiples of 32 bits (including line / instruction reference).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B>Assembler.</B><B><A HREF="../../../yams/assembler/Assembler.html#extractWord(int, java.lang.String, int, yams.parser.Instruction)">extractWord</A></B>(int&nbsp;wordNumber,
            java.lang.String&nbsp;wordString,
            int&nbsp;lineNumber,
            <A HREF="../../../yams/parser/Instruction.html" title="class in yams.parser">Instruction</A>&nbsp;currentInstruction)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extracts a specific 32 bit from a string, whose length is a multiple of 32 bits.</TD>
</TR>
</TABLE>
&nbsp;
<P>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../yams/assembler/AssemblerException.html" title="class in yams.assembler"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="AssemblerException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
@


1.3
log
@Updated javadoc
@
text
@d5 1
a5 1
<!-- Generated by javadoc (build 1.4.2_03) on Wed Dec 17 15:04:56 GMT 2003 -->
d112 1
a112 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d122 2
a123 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d131 2
a132 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d146 4
a149 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d157 2
a158 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d167 2
a168 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d176 2
a177 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d185 1
a185 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d218 1
a218 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d228 1
a228 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d238 1
a238 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d248 2
a249 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d257 2
a258 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d268 2
a269 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
d280 1
a280 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
@


1.2
log
@Updated javadoc
@
text
@d5 1
a5 1
<!-- Generated by javadoc (build 1.4.2) on Sat Dec 13 20:02:27 GMT 2003 -->
@


1.1
log
@Updated new javadoc
@
text
@d5 1
a5 1
<!-- Generated by javadoc (build 1.4.2) on Sat Dec 13 19:58:16 GMT 2003 -->
@

